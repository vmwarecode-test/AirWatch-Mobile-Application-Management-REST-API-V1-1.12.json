{
  "swagger": "2.0",
  "info": {
    "version": "1",
    "title": "AirWatch Mobile Application Management REST API",
    "description": "AirWatch Mobile Application Management REST API V1"
  },
  "host": "apimain.ssdevrd.com",
  "basePath": "/api/mam",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/apps/appgroups/{appgroupid}": {
      "get": {
        "tags": [
          "AppGroups"
        ],
        "summary": "Retrieves the Application group details based on the Application Group id.",
        "description": "v1",
        "operationId": "AppGroups_GetAppGroupDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appgroupid",
            "in": "path",
            "description": "Application Group Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "AppGroups"
        ],
        "summary": "Updates the specified Application Group.",
        "description": "v1",
        "operationId": "AppGroups_UpdateApplicationGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appgroupid",
            "in": "path",
            "description": "The Application Group Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "applicationGroup",
            "in": "body",
            "description": "Updated Application Group details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/appgroups": {
      "post": {
        "tags": [
          "AppGroups"
        ],
        "summary": "Creates an Application Group.",
        "description": "v1",
        "operationId": "AppGroups_CreateApplicationGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationGroup",
            "in": "body",
            "description": "The Application Group details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "AppGroups"
        ],
        "summary": "Deletes Application Groups identified by Application Group Identifiers.",
        "description": "v1",
        "operationId": "AppGroups_BulkDeleteApplicationGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "List of Application Group IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/appgroups/{appgroupid}/applications": {
      "post": {
        "tags": [
          "AppGroups"
        ],
        "summary": "Adds applications to the specified Application Group.",
        "description": "v1",
        "operationId": "AppGroups_AddApplicationsToApplicationGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appgroupid",
            "in": "path",
            "description": "Application Group Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bulkInput",
            "in": "body",
            "description": "List of Applications to be added to the specified application group.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkAppInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "AppGroups"
        ],
        "summary": "Deletes applications from the specified Application Group.",
        "description": "v1",
        "operationId": "AppGroups_DeleteApplicationsFromApplicationGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appgroupid",
            "in": "path",
            "description": "Application Group Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bulkInput",
            "in": "body",
            "description": "List of Applications to be deleted from the specified application group.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkAppInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/appgroups/search": {
      "get": {
        "tags": [
          "AppGroups"
        ],
        "summary": "Searches for the Application Groups based on the query information provided.",
        "description": "v1",
        "operationId": "AppGroups_ApplicationGroupSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appgroupname",
            "in": "query",
            "description": "App Group name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "OrganizationGroup Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "The Application Platform.",
            "required": false,
            "type": "string"
          },
          {
            "name": "appgrouptype",
            "in": "query",
            "description": "Application group type [Whitelist, Blacklist, Required, MDMApplication].",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orderby column name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorting order. Values ASC or DESC. Defaults to ASC.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/appgroups/create": {
      "post": {
        "tags": [
          "AppGroups"
        ],
        "summary": "Creates an Application Group.",
        "description": "v1",
        "operationId": "AppGroups_CreateAppGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationGroup",
            "in": "body",
            "description": "The Application Group details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/appgroups/delete": {
      "post": {
        "tags": [
          "AppGroups"
        ],
        "summary": "Deletes Application Groups identified by Application Group Identifiers.",
        "description": "v1",
        "operationId": "AppGroups_BulkDeleteAppGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "List of Application Group IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/appgroups/{appgroupid}/update": {
      "post": {
        "tags": [
          "AppGroups"
        ],
        "summary": "Updates the specified Application Group.",
        "description": "v1",
        "operationId": "AppGroups_UpdateAppGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appgroupid",
            "in": "path",
            "description": "The Application Group Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "applicationGroup",
            "in": "body",
            "description": "Updated Application Group details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/appgroups/{appgroupid}/addapplications": {
      "post": {
        "tags": [
          "AppGroups"
        ],
        "summary": "Adds applications to the specified Application Group.",
        "description": "v1",
        "operationId": "AppGroups_AddApplicationsToAppGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appgroupid",
            "in": "path",
            "description": "Application Group Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bulkInput",
            "in": "body",
            "description": "List of Applications to be added to the specified application group.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkAppInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/appgroups/{appgroupid}/deleteapplications": {
      "post": {
        "tags": [
          "AppGroups"
        ],
        "summary": "Deletes applications from the specified Application Group.",
        "description": "v1",
        "operationId": "AppGroups_DeleteApplicationsFromAppGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appgroupid",
            "in": "path",
            "description": "Application Group Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bulkInput",
            "in": "body",
            "description": "List of Applications to be deleted from the specified application group.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkAppInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/appgroupsearch": {
      "get": {
        "tags": [
          "AppGroups"
        ],
        "summary": "Searches for the Application Groups based on the query information provided.",
        "description": "v1",
        "operationId": "AppGroups_AppGroupSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appgroupname",
            "in": "query",
            "description": "App Group name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "OrganizationGroup Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "The Application Platform.",
            "required": false,
            "type": "string"
          },
          {
            "name": "appgrouptype",
            "in": "query",
            "description": "App group type [Whitelist, Blacklist, Required, MDMApplication].",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orderby column name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Sorting order. Values ASC or DESC. Defaults to ASC.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/appsintegration/entitlementnotifications": {
      "post": {
        "tags": [
          "ApplicationIntegration"
        ],
        "summary": "Receives the entitlement notification message with the details",
        "description": "v1",
        "operationId": "ApplicationIntegration_EntitlementNotifications",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "messages",
            "in": "body",
            "description": "Message details along with type of message [like add, delete etc...]",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseNotification"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/appsintegration/catalogitemnotifications": {
      "post": {
        "tags": [
          "ApplicationIntegration"
        ],
        "summary": "Receives the catalog notification messages with the details",
        "description": "v1",
        "operationId": "ApplicationIntegration_CatalogNotifications",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "messages",
            "in": "body",
            "description": "Catalog notification details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseNotification"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/search": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Search and retrieve details for both internal and external applications.",
        "description": "v1",
        "operationId": "Apps_Search",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "The Product Type - App or Book",
            "required": false,
            "type": "string"
          },
          {
            "name": "applicationtype",
            "in": "query",
            "description": "Type of the application. (Internal/Public)",
            "required": false,
            "type": "string"
          },
          {
            "name": "applicationname",
            "in": "query",
            "description": "Application Name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "description": "The Application Category.",
            "required": false,
            "type": "string"
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "BundleId/PackageId",
            "required": false,
            "type": "string"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "LocationGroup Identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Device Model.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Application Status.",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "The Application Platform.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orderby column name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/managementstatus": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Retrieves the application management status, i.e. the application bundle id passed is managedby AirWatch or not.",
        "description": "v1",
        "operationId": "Apps_GetAppManagementStatus",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "managementid",
            "in": "query",
            "description": "Management Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "Bundle Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/applestore/search": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Searches in App stores for the applications with the specified search string and returns the details",
        "description": "v1",
        "operationId": "Apps_SearchAppleStore",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appname",
            "in": "query",
            "description": "Application name to be searched.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/playstore/search": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Searches in Google play store for the applications with the specified search string and returns the details",
        "description": "v1",
        "operationId": "Apps_SearchGooglePlayStore",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appname",
            "in": "query",
            "description": "Application name to be searched.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/windowsstore/search": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Retrieves the details of the applications from the Windows App Store based on the search request.",
        "description": "v1",
        "operationId": "Apps_WindowsStoreSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appname",
            "in": "query",
            "description": "Application name to be searched.",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/sdkanalytics": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Gets SDK analytics based on the query information provided.",
        "description": "v1",
        "operationId": "Apps_GetSDKAnanlytics",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput.bulkValues.value",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "OrganizationGroup Identifier.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "applicationid",
            "in": "query",
            "description": "Application Identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventname",
            "in": "query",
            "description": "Event Name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "startdatetime",
            "in": "query",
            "description": "Sample Starttime.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "enddatetime",
            "in": "query",
            "description": "Sample Endtime.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchtype",
            "in": "query",
            "description": "Search by Device Identifier types (DeviceId, MacAddress, Udid, SerialNumber, and ImeiNumber)..",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/udid/{udid}/{deviceType}": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "GetAllAssignedApps(..) returns all the apps that are assiged to a device.\r\nThis mimics app catalog and represnts app catalog as an API.\r\nAdded for GB integration.",
        "description": "v1",
        "operationId": "Apps_GetAllAssignedApps",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "Device UDID which has to be encrypted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceType",
            "in": "path",
            "description": "Device Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/{udid}/{appId}/{appType}/{deviceType}/install": {
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "InstallApp(..) API will enable app install. It mimics the app catalog flow. Added for Greenbox integration.\r\nThis method supports install for different app types. It forwards requests to respective app type adapters.\r\nIt also covers the EULA and Compliance flows for app install.",
        "description": "v1",
        "operationId": "Apps_InstallApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "Device Udid",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "path",
            "description": "Application Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "appType",
            "in": "path",
            "description": "App type",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceType",
            "in": "path",
            "description": "Device Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/{udid}/{appId}/{appType}/{deviceType}": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Gets application details.",
        "description": "v1",
        "operationId": "Apps_GetApplicationDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "Device Udid",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "path",
            "description": "App Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "appType",
            "in": "path",
            "description": "Application Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceType",
            "in": "path",
            "description": "Device Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/enrollDevice": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "This API will return the enrollment URL. If GB is accessed from an unmanaged device and AW is configured, we redirect the user\r\nto the enrollment URL to be able to view and install apps from AW after enrolling.",
        "description": "v1",
        "operationId": "Apps_EnrollDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/udid/{udid}/deviceType/{deviceType}/eulaContentId/{eulaContentId}/acceptEula": {
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "API to update the EULA acceptance from GB. When a user is prompted with an EULA and accepts it, this API is called to udpate the EULA acceptance.",
        "description": "v1",
        "operationId": "Apps_AcceptEula",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "Encrypted Uid",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceType",
            "in": "path",
            "description": "Device Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "eulaContentId",
            "in": "path",
            "description": "Content Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/{applicationid}/assignment": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Get the list of user and user group assigned for an application.",
        "description": "v1",
        "operationId": "Apps_GetAssignmentForApplication",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "applicationtype",
            "in": "query",
            "description": "Type of the application. (Internal/Public)",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/categories/{categoryType}": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "New - Get the list of categories that can be assigned to an application.",
        "description": "v1",
        "operationId": "Apps_GetCategoriesForApplication",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "categoryType",
            "in": "path",
            "description": "category Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/category": {
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "New - Add application category.",
        "description": "v1",
        "operationId": "Apps_AddApplicationCategory",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "categoryName",
            "in": "query",
            "description": "Name of category to be added.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of category to be added.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/office365MamApplicationPolicy": {
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "The save office 365 mam application policy.",
        "operationId": "Apps_SaveOffice365MamApplicationPolicy",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "The model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Office365MamIntegrationSettingsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Apps"
        ],
        "summary": "The delete office 365 mam application policy.",
        "operationId": "Apps_DeleteOffice365MamApplicationPolicy",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/office365Credentials": {
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "This API saves the user name and password of Office365 User in order to access the Office365 DLP and MAM APIs",
        "operationId": "Apps_Office365Credentials",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Model containing Username and password of the office365.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Office365MAMIntegrationCredentialsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/searchazureusergroups": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "The searchazureusergroups.",
        "operationId": "Apps_Searchazureusergroups",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/appconfig": {
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "API to parse AppConfigXML\r\nIt accepts AppConfigXML as a file, parse the xml file and convert into corresponding appconfig value",
        "operationId": "Apps_ParseAppConfigXml",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/getmanagementstatus": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Retrieves the application management status, i.e. the application bundle id passed is managedby AirWatch or not.",
        "description": "v1",
        "operationId": "Apps_GetAppMgmtStatus",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "managementid",
            "in": "query",
            "description": "Management Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "Bundle Id",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/applestoresearch": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Searches in App stores for the applications with the specified search string and returns the details",
        "description": "v1",
        "operationId": "Apps_SearchAppStore",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appname",
            "in": "query",
            "description": "Application name to be searched.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/playstoresearch": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Searches in Google play store for the applications with the specified search string and returns the details",
        "description": "v1",
        "operationId": "Apps_SearchPlayStore",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appname",
            "in": "query",
            "description": "Application name to be searched.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/windowsstoresearch": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Retrieves the details of the applications from the Windows App Store based on the search request.",
        "description": "v1",
        "operationId": "Apps_SearchWindowsStore",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appname",
            "in": "query",
            "description": "Application name to be searched.",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/{udid}/{appId}/{appType}/{deviceType}/appDetails": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Gets application details.",
        "description": "v1",
        "operationId": "Apps_GetAppDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "Device Udid",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "path",
            "description": "App Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "appType",
            "in": "path",
            "description": "Application Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceType",
            "in": "path",
            "description": "Device Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/udid/{udid}/{deviceType}/apps": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "GetAllAssignedApps(..) returns all the apps that are assiged to a device.\r\nThis mimics app catalog and represnts app catalog as an API.\r\nAdded for GB integration.",
        "description": "v1",
        "operationId": "Apps_GetAssignedApps",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "Device UDID which has to be encrypted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceType",
            "in": "path",
            "description": "Device Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/removallogs": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Search and retrieve removal logs for internal applications.\r\nIf the number of remove application commands queued in a set time interval is exceeded the commands are put in locked state\r\nThe API method returns the details of the commands that are put in locked state\r\nThe records returned take into consideration the filter criteria recieved in request query",
        "description": "v1",
        "operationId": "Apps_GetAppRemovalProtectionLogs",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bundleid",
            "in": "query",
            "description": "BundleId/PackageId",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "LocationGroup Identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "The command Status.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orderby column name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Apps"
        ],
        "summary": "Updates the action taken on the threshold.\r\nEither unlock/clear the threshold. \r\nOn unlock the commands are sent to the device\r\nOn clear the commands are purged from the queue.",
        "description": "v1",
        "operationId": "Apps_UpdateAdminActionTakenOnAppRemovalProtectionLogs",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "The body of the request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAppRemovalProtectionModel"
            }
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "LocationGroup Identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/udid/{udid}/deviceType/{deviceType}/installApps": {
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "Installs all auto apps for the WS One device",
        "operationId": "Apps_InstallAllAutoApps",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "udid",
            "in": "path",
            "description": "device udid",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceType",
            "in": "path",
            "description": "device type",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/appscanner/savereport": {
      "post": {
        "tags": [
          "AppScan"
        ],
        "summary": "Notification API which will be used by AppScan Service to save the report in Airwatch",
        "description": "v1",
        "operationId": "AppScan_SaveReport",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "report",
            "in": "body",
            "description": "Report to be saved in Airwatch",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppScanServiceReport"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Token used for authentication",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/appwrapper/savewrappedapp": {
      "post": {
        "tags": [
          "AppWrapping"
        ],
        "summary": "Notification API which will be used by AppWrapping Service to save the wrapped apk in Airwatch",
        "description": "v1",
        "operationId": "AppWrapping_SaveWrappedApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appWrappingServiceReport",
            "in": "body",
            "description": "Response from the service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppWrappingServiceReport"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Token used for authentication",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blobs/uploadblob": {
      "post": {
        "tags": [
          "Blobs"
        ],
        "summary": "Uploads a file",
        "description": "v1",
        "operationId": "Blobs_UploadBlob",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "query",
            "description": "The name of the file being uploaded",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "The id of the organization group in which to upload the file.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "moduleType",
            "in": "query",
            "description": "Module type of file being uploaded. Example: General, Application, Book etc., Default: General",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blobs/downloadblob/{blobId}": {
      "get": {
        "tags": [
          "Blobs"
        ],
        "summary": "Download a file based on blobId.",
        "description": "v1",
        "operationId": "Blobs_DownloadBlob",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "blobId",
            "in": "path",
            "description": "The blob id of the file to download",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/blobs/blob/{blobId}": {
      "delete": {
        "tags": [
          "Blobs"
        ],
        "summary": "New - Delete the blob based on the blob Id",
        "operationId": "Blobs_DeleteBlob",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "blobId",
            "in": "path",
            "description": "The blob id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/browser/bookmarks": {
      "get": {
        "tags": [
          "Browser"
        ],
        "summary": "Fetches personal bookmarks for an enrollment user.",
        "description": "v1",
        "operationId": "Browser_FetchBookmarks",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber etc].",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          },
          {
            "name": "aw-group-id",
            "in": "header",
            "description": "Group ID",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Browser"
        ],
        "summary": "Saves personal bookmarks for an enrollment user.",
        "description": "v1",
        "operationId": "Browser_SaveBookmarks",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "models",
            "in": "body",
            "description": "List of bookmark models",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BookmarksModel"
              }
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "description": "The alternate id type [Macaddress, Udid, Serialnumber, ImeiNumber etc].",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The alternate id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          },
          {
            "name": "aw-group-id",
            "in": "header",
            "description": "Group ID",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/help/controllers": {
      "get": {
        "tags": [
          "Help"
        ],
        "summary": "Get the list of Api controllers",
        "operationId": "Help_GetControllers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/help/endpoints/{endpointId}": {
      "get": {
        "tags": [
          "Help"
        ],
        "summary": "Gets the details about an endpoint",
        "operationId": "Help_GetEndPointById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "Example:\"GET-activesync-ping\"",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/help/controllers/{id}": {
      "get": {
        "tags": [
          "Help"
        ],
        "summary": "Gets the controller endpoints",
        "operationId": "Help_GetControllerById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "controller name",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/help/controllers/endpoints/index": {
      "get": {
        "tags": [
          "Help"
        ],
        "summary": "Retrieve the index form for endpoints to be used for searching",
        "operationId": "Help_GetEndpointIndex",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/uploadchunk": {
      "post": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Uploads the chunk data of an internal application into the server.",
        "description": "v1",
        "operationId": "InternalApps_InsertInternalApplicationChunk",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "internalAppChunk",
            "in": "body",
            "description": "The internal app chunk.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InternalAppChunk"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/{applicationid}/deactivate": {
      "post": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Deactivates the specified internal application.",
        "description": "v1",
        "operationId": "InternalApps_DeactivateInternalApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The Application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/begininstall": {
      "post": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Creates an internal application using the uploaded file chunks.",
        "description": "v1",
        "operationId": "InternalApps_CreateInternalAppFromBlob",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appChunkTransaction",
            "in": "body",
            "description": "The chunk details of the application.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InternalAppChunkTranscation"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/{applicationId}": {
      "get": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Gets the details of an internal app identified by id.",
        "description": "v1",
        "operationId": "InternalApps_GetInternalAppById",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Internal App Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Updates the internal application identified by applicationid.",
        "description": "v1",
        "operationId": "InternalApps_UpdateInternalApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Application Id to be updated",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "applicationEntity",
            "in": "body",
            "description": "The application details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/{applicationid}/install": {
      "post": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Installs the specified internal application on a device.",
        "description": "v1",
        "operationId": "InternalApps_InstallInternalAppOnDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The Id of the Application to be installed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceInfo",
            "in": "body",
            "description": "The details of the device to install the application on.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceInfo"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/{applicationid}": {
      "delete": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Deletes the specified internal application.",
        "description": "v1",
        "operationId": "InternalApps_DeleteInternalApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Id of the app to be deleted.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/windowsappdependency/{windowsAppDependencyId}": {
      "get": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Gets the details of an windows app dependency identified by id.",
        "description": "v1",
        "operationId": "InternalApps_GetWindowsAppDependencyById",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "windowsAppDependencyId",
            "in": "path",
            "description": "Windows app dependency id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "InternalApps"
        ],
        "summary": "New - Deletes the windows dependency application specified by id.",
        "description": "v1",
        "operationId": "InternalApps_DeleteWindowsAppDependency",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "windowsAppDependencyId",
            "in": "path",
            "description": "Id of the dependency to be deleted.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/windowsappdependencies/{organizationGroupId}": {
      "get": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Gets the list of saved windows app dependency files for current OG and child OGs.",
        "description": "v1",
        "operationId": "InternalApps_GetWindowsAppDependanciesByLocationGroupId",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationGroupId",
            "in": "path",
            "description": "Organization Group Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/{applicationId}/assignments": {
      "put": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Edits assignments along with the flexible deplyment parameters associated with an internal application.",
        "description": "v1",
        "operationId": "InternalApps_EditAssignmentsWithFlexibleDeploymentParameters",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Internal Application Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "applicationAssignments",
            "in": "body",
            "description": "Application Assignments Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationAssignmentsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Adds assignments along with the flexible deplyment parameters to an internal application.",
        "description": "v1",
        "operationId": "InternalApps_AddAssignmentsWithFlexibleDeploymentParameters",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Internal Application Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "applicationAssignments",
            "in": "body",
            "description": "Application Assignments Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationAssignmentsModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Delete Application Assignment to Smart Group(s).",
        "description": "v1",
        "operationId": "InternalApps_DeleteAssignment",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Application Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "applicationDeleteAssignmentModel",
            "in": "body",
            "description": "applicationDeleteAssignmentModel model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationDeleteAssignmentModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/{applicationid}/status": {
      "get": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Indicates the status of the specified internal application on a device.",
        "description": "v1",
        "operationId": "InternalApps_GetInternalAppStatus",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceid",
            "in": "query",
            "description": "Device Identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "macaddress",
            "in": "query",
            "description": "Device MAC address.",
            "required": false,
            "type": "string"
          },
          {
            "name": "serialnumber",
            "in": "query",
            "description": "Device SerialNumber.",
            "required": false,
            "type": "string"
          },
          {
            "name": "udid",
            "in": "query",
            "description": "Device UDID.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/{applicationid}/devices": {
      "get": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Provides a list of devices that have the specified internal application installed or assigned",
        "description": "v1",
        "operationId": "InternalApps_GetInternalAppInstalledOrAssignedDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status - installed/assigned",
            "required": false,
            "type": "string"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "The LocationGroup Identifier..",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The Page number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The Page size.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/{applicationid}/retire": {
      "post": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Retires the specified internal application.",
        "description": "v1",
        "operationId": "InternalApps_RetireApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/{applicationid}/unretire": {
      "post": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Unretires the specified internal application.",
        "description": "v1",
        "operationId": "InternalApps_UnRetireApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "retirepreviousversion",
            "in": "query",
            "description": "Whether to retire previous versions of the application.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/{applicationid}/activate": {
      "post": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Activates the specified internal application.",
        "description": "v1",
        "operationId": "InternalApps_ActivateInternalApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/{applicationid}/uninstall": {
      "post": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Uninstalls the specified internal public application from a device.",
        "description": "v1",
        "operationId": "InternalApps_RemoveInternalAppFromDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceInfo",
            "in": "body",
            "description": "Device Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceInfo"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/SendApplicationConfiguration": {
      "post": {
        "tags": [
          "InternalApps"
        ],
        "summary": "SendApplicationConfiguration to Devices for Internal Apps",
        "operationId": "InternalApps_SendApplicationConfigurationInternalApps",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "sendApplicationConfigurationModel",
            "in": "body",
            "description": "Application Configuration Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendApplicationConfigurationModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/{applicationid}/installeddevices": {
      "get": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Provides a list of devices that have the specified internal application installed.",
        "description": "v1",
        "operationId": "InternalApps_GetInternalAppInstalledDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "The LocationGroup Identifier..",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The Page number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The Page size.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/internal/{applicationid}/assigneddevices": {
      "get": {
        "tags": [
          "InternalApps"
        ],
        "summary": "Provides a list of devices that have been assigned the specified internal application.",
        "description": "v1",
        "operationId": "InternalApps_GetInternalAppAssigneddevicesDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "The LocationGroup Identifier..",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The Page number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The Page size.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Get",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Put",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Post",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Delete",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "head": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Head",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Patch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/cached": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_GetCached",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/concurrency": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_GetRequestQueryValue",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/cached/query": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_GetPagedResultFromCache",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/enrollmentuser": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_TestEnrollmentUserRoleType",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-group-id",
            "in": "header",
            "description": "Group ID",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/adminuser": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_TestAdminUserRoleType",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/internal": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_TestInternal",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/emptymodel": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_GetEmptyModel",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/resources": {
      "put": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_PutToReturnModel",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_SetLocationHeader",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_PatchToReturnModel",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/ping/content": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_GetContent",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/{id}": {
      "get": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Gets the details of a public app identified by id.",
        "description": "v1",
        "operationId": "PublicApps_GetPublicAppById",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Public App Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public": {
      "post": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Inserts the public application selected by searching for the bundle ID (Android) or external ID (iOS) in the app market.",
        "description": "v1",
        "operationId": "PublicApps_InsertPublicApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "application",
            "in": "body",
            "description": "The application entity to be inserted.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/{applicationid}": {
      "put": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Updates the public application selected by searching for the bundle ID (Android) or external ID (iOS) in the app market.",
        "description": "v1",
        "operationId": "PublicApps_UpdatePublicApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application id to be updated",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "applicationEntity",
            "in": "body",
            "description": "The application details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Deletes the specified public application.",
        "description": "v1",
        "operationId": "PublicApps_DeletePublicApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Id of the app to be deleted.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/{applicationid}/deactivate": {
      "post": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Deactivates the specified public application.",
        "description": "v1",
        "operationId": "PublicApps_DeactivatePublicApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The Application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/{applicationid}/install": {
      "post": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Installs the specified public application on a device.",
        "description": "v1",
        "operationId": "PublicApps_InstallPublicAppOnDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The Id of the Application to be installed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceInfo",
            "in": "body",
            "description": "The details of the device to install the application on.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceInfo"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/{applicationid}/uninstall": {
      "post": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Uninstalls the specified public application from a device.",
        "description": "v1",
        "operationId": "PublicApps_RemovePublicAppFromDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceInfo",
            "in": "body",
            "description": "The device info.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceInfo"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/{applicationid}/status": {
      "get": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Indicates the status of the specified public application on a device.",
        "description": "v1",
        "operationId": "PublicApps_GetPublicAppStatus",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceid",
            "in": "query",
            "description": "Device Identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "macaddress",
            "in": "query",
            "description": "Device MAC address.",
            "required": false,
            "type": "string"
          },
          {
            "name": "serialnumber",
            "in": "query",
            "description": "Device SerialNumber.",
            "required": false,
            "type": "string"
          },
          {
            "name": "udid",
            "in": "query",
            "description": "Device UDID.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/{applicationid}/devices": {
      "get": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Provides a list of devices that have the specified public application installed or assigned",
        "description": "v1",
        "operationId": "PublicApps_GetPublicAppInstalledOrAssignedDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status - installed/assigned",
            "required": false,
            "type": "string"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "The LocationGroup Identifier..",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The Page number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The Page size.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/{applicationid}/activate": {
      "post": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Activates the specified public application.",
        "description": "v1",
        "operationId": "PublicApps_ActivatePublicApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/bsp/{locationGroupId}": {
      "get": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Gets a list of app names and BundleId from Microsoft for all the apps added to BSP\r\nfor the Tenant at passed LG",
        "operationId": "PublicApps_GetBspAppsListFromMirosoft",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "locationGroupId",
            "in": "path",
            "description": "location group Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Triggers Import of BSP apps for the passed LG",
        "operationId": "PublicApps_TriggerBspAppsImportForLg",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "locationGroupId",
            "in": "path",
            "description": "location group Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "PublicApps"
        ],
        "summary": "New - Import BSP apps for the passed LG",
        "operationId": "PublicApps_ImportBspAppsForLg",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "locationGroupId",
            "in": "path",
            "description": "location group Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/bsp/{applicationId}/license": {
      "get": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Gets the License Information for the passed App",
        "operationId": "PublicApps_GetLicenseInfoForBspApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "application Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/bsp/{applicationId}/licenses": {
      "get": {
        "tags": [
          "PublicApps"
        ],
        "summary": "New - Gets licenses for a bsp app",
        "operationId": "PublicApps_GetLicensesForBspApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "The LocationGroup Identifier..",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/bsp/{applicationId}/synclicenses": {
      "get": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Sync Licenses For Online Bsp Apps",
        "operationId": "PublicApps_SyncLicensesForOnlineBspApps",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "The LocationGroup Identifier..",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/{id}/smartgroups": {
      "get": {
        "tags": [
          "PublicApps"
        ],
        "summary": "New - Gets List of Smart Groups assigned to a public app",
        "operationId": "PublicApps_GetSmartGroupsByApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Public Application Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/SendApplicationConfiguration": {
      "post": {
        "tags": [
          "PublicApps"
        ],
        "summary": "SendApplicationConfiguration to Devices for Public Apps",
        "operationId": "PublicApps_SendApplicationConfigurationPublicApps",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "sendApplicationConfigurationModel",
            "in": "body",
            "description": "Application Configuration Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendApplicationConfigurationModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/{applicationid}/installeddevices": {
      "get": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Provides a list of devices that have the specified public application installed.",
        "description": "v1",
        "operationId": "PublicApps_GetPublicAppInstalledDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "The LocationGroup Identifier..",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The Page number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The Page size.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/public/{applicationid}/assigneddevices": {
      "get": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Provides a list of devices that have the specified public application installed.",
        "description": "v1",
        "operationId": "PublicApps_GetPublicAppAssignedDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "The LocationGroup Identifier..",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The Page number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The Page size.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/public/{applicationid}/update": {
      "post": {
        "tags": [
          "PublicApps"
        ],
        "summary": "Updates the public application selected by searching for the bundle ID (Android) or external ID (iOS) in the app market.",
        "description": "v1",
        "operationId": "PublicApps_UpdatePublicApplication",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application id to be updated",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "applicationEntity",
            "in": "body",
            "description": "The application details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/purchased/search": {
      "get": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Search and retrieve details for purchased applications.",
        "description": "v1",
        "operationId": "PurchasedApps_VppAppSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationname",
            "in": "query",
            "description": "Application Name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "isassigned",
            "in": "query",
            "description": "Flag to indicate whether the app is assigned or not",
            "required": false,
            "type": "string"
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "BundleId/PackageId",
            "required": false,
            "type": "string"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "LocationGroup Identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Device Model.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Application Status.",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "The Application Platform.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orderby column name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/{applicationid}/status": {
      "get": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Indicates the status of the specified purchased application on a device.",
        "description": "v1",
        "operationId": "PurchasedApps_GetPurchasedAppStatus",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceid",
            "in": "query",
            "description": "Device Identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "macaddress",
            "in": "query",
            "description": "Device MAC address.",
            "required": false,
            "type": "string"
          },
          {
            "name": "serialnumber",
            "in": "query",
            "description": "Device SerialNumber.",
            "required": false,
            "type": "string"
          },
          {
            "name": "udid",
            "in": "query",
            "description": "Device UDID.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/{applicationid}/devices": {
      "get": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Provides a list of devices that have the specified purchased application installed or assigned.",
        "description": "v1",
        "operationId": "PurchasedApps_GetPurchasedAppInstalledOrAssignedDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status - installed/assigned",
            "required": false,
            "type": "string"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "The LocationGroup Identifier..",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The Page number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The Page size.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/{applicationid}/assignment": {
      "post": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Create a new VPP Licensed App Allocation",
        "description": "v1",
        "operationId": "PurchasedApps_CreatePurchasedAppAssignment",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "application",
            "in": "body",
            "description": "Detailed Info.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchasedApplicationModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/{applicationid}/install": {
      "post": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Installs the specified purchased Application on the device.",
        "description": "v1",
        "operationId": "PurchasedApps_InstallVppAppForDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Id of the Application to be installed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceInfo",
            "in": "body",
            "description": "Details of the device on which the Application to be installed.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceInfo"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/{applicationid}/uninstall": {
      "post": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Uninstalls the specified purchased application from a device.",
        "description": "v1",
        "operationId": "PurchasedApps_RemovePurchasedAppFromDevice",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceInfo",
            "in": "body",
            "description": "The details of the device to uninstall the application from.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceInfo"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/{applicationid}": {
      "get": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Returns VPP licensed Application allocation details by AppId.",
        "description": "v1",
        "operationId": "PurchasedApps_LoadVppLicensedAppAllocation",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Updates VPP Licensed Application Assignment.",
        "description": "v1",
        "operationId": "PurchasedApps_UpdateVppLicensedAppAssignment",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Vpp Licensed Application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "application",
            "in": "body",
            "description": "Assignment to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchasedApplicationModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Deletes the specified purchased app.",
        "description": "v1",
        "operationId": "PurchasedApps_DeleteVppApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/{applicationid}/vppinvite": {
      "post": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Sends VPP invites to the users.",
        "description": "v1",
        "operationId": "PurchasedApps_BulkSendVppInvites",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The Application Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing device IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/{applicationid}/vppinvitestatus/{deviceid}": {
      "get": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Gets User's VPP Invite Status",
        "description": "v1",
        "operationId": "PurchasedApps_GetUserVppInviteStatus",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Vpp Application Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceid",
            "in": "path",
            "description": "Device Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/VppSyncAssets/{locationGroupId}": {
      "put": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Queues up Sync Assets job for Apple VPP apps.",
        "operationId": "PurchasedApps_VppSyncAssets",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "locationGroupId",
            "in": "path",
            "description": "the Lg for which sync is requested",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/ResetClientContextForAccount/{locationGroupId}": {
      "put": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Resets the client context for the account at passed LG.",
        "operationId": "PurchasedApps_ResetClientContextForAccount",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "locationGroupId",
            "in": "path",
            "description": "Location group Id for the acoount where reset action is intended.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/GetVppSyncAssetsStatus/{locationGroupId}": {
      "get": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Get the status and details for the VPP Sync Assets job for the VPP\r\nAccount at passed LG",
        "operationId": "PurchasedApps_GetVppSyncAssetsStatus",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "locationGroupId",
            "in": "path",
            "description": "Location group Id for the acoount where reset action is intended.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/EnableDeviceAssignmentForVppApp/{appId}": {
      "put": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Enables DeviceBasedAssignment for the passed app",
        "operationId": "PurchasedApps_EnableDeviceAssignmentForVppApp",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "app Id for which device based assignment needs to be enabled.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/{appId}": {
      "post": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Updates the application on devices having device based licenses for the application if an update is available.",
        "operationId": "PurchasedApps_UpdateVppApplication",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "The application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "patch": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Sets the value of the auto update flag for a device based VPP application.",
        "operationId": "PurchasedApps_UpdateAutoUpdateFlagForApplication",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "The app id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "purchasedAppAutoUpdateModel",
            "in": "body",
            "description": "The purchased application auto update model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchasedAppAutoUpdateModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/account/{locationGroupId}": {
      "delete": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Deletes the VPP account present at the provided location group.",
        "operationId": "PurchasedApps_DeleteVppAccount",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "locationGroupId",
            "in": "path",
            "description": "The location group id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchasedappsearch": {
      "get": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Search and retrieve details for purchased applications.",
        "description": "v1",
        "operationId": "PurchasedApps_VppApplicationSearch",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationname",
            "in": "query",
            "description": "Application Name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "isassigned",
            "in": "query",
            "description": "Flag to indicate whether the app is assigned or not",
            "required": false,
            "type": "string"
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "BundleId/PackageId",
            "required": false,
            "type": "string"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "LocationGroup Identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Device Model.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Application Status.",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "The Application Platform.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Records per page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Orderby column name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/purchased/{applicationid}/installeddevices": {
      "get": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Provides a list of devices that have the specified purchased application installed.",
        "description": "v1",
        "operationId": "PurchasedApps_GetPurchasedAppInstalledDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "The LocationGroup Identifier..",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The Page number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The Page size.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/purchased/{applicationid}/assigneddevices": {
      "get": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Provides a list of devices that have the specified purchased application installed.",
        "description": "v1",
        "operationId": "PurchasedApps_GetPurchasedAppAssignedDevices",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The application ID.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locationgroupid",
            "in": "query",
            "description": "The LocationGroup Identifier..",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The Page number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "The Page size.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/purchased/{applicationid}/assignmentcreate": {
      "post": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Create a new VPP Licensed App Allocation",
        "description": "v1",
        "operationId": "PurchasedApps_CreatePurchasedApplicationAssignment",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "application",
            "in": "body",
            "description": "Detailed Info.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchasedApplicationModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/purchased/{applicationid}/sendvppinvite": {
      "post": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Sends VPP invites to the users.",
        "description": "v1",
        "operationId": "PurchasedApps_SendBulkVppInvites",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "The Application Identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk input containing device IDs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkInput"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/purchased/{applicationid}/getvppinvitestatus/{deviceid}": {
      "get": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Gets User's VPP Invite Status",
        "description": "v1",
        "operationId": "PurchasedApps_GetUsersVppInviteStatus",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Vpp Application Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "deviceid",
            "in": "path",
            "description": "Device Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/purchased/{applicationid}/update": {
      "post": {
        "tags": [
          "PurchasedApps"
        ],
        "summary": "Updates VPP Licensed Application Assignment.",
        "description": "v1",
        "operationId": "PurchasedApps_UpdateVppLicensedApplicationAssignment",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Vpp Licensed Application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "application",
            "in": "body",
            "description": "Assignment to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchasedApplicationModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/sdk/publishSettings": {
      "post": {
        "tags": [
          "SdkSettings"
        ],
        "summary": "Saves and publishes the SDK settings.",
        "operationId": "SdkSettings_PublishSettings",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "systemCodeCategory",
            "in": "body",
            "description": "The system code group.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemCodeCategoryOverrideEntity"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/sdk/settings/publish/{organizationGroupId}": {
      "post": {
        "tags": [
          "SdkSettings"
        ],
        "summary": "Publishes the settings.",
        "operationId": "SdkSettings_PublishSettings",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "systemCodeCategory",
            "in": "body",
            "description": "The system code category.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemCodeCategoryOverrideEntity"
            }
          },
          {
            "name": "organizationGroupId",
            "in": "path",
            "description": "The organization group identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/sdk/securitypolicies/publish/{organizationGroupId}": {
      "post": {
        "tags": [
          "SdkSettings"
        ],
        "summary": "Publishes the security policies.",
        "operationId": "SdkSettings_PublishSecurityPolicies",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "systemCodeCategory",
            "in": "body",
            "description": "The system code category.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemCodeCategoryOverrideEntity"
            }
          },
          {
            "name": "organizationGroupId",
            "in": "path",
            "description": "The organization group identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/{applicationId}/smartgroups/{smartGroupId}": {
      "post": {
        "tags": [
          "SmartGroup"
        ],
        "summary": "Assigns a Smart Group to an Public Application.",
        "description": "v1",
        "operationId": "SmartGroup_AddPublicAppToSmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "Application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartGroupId",
            "in": "path",
            "description": "SmartGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/{applicationid}/smartgroups/{smartgroupid}": {
      "delete": {
        "tags": [
          "SmartGroup"
        ],
        "summary": "Deletes Assignment",
        "description": "v1",
        "operationId": "SmartGroup_DeleteAssignment",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartgroupid",
            "in": "path",
            "description": "SmartGroup Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/internal/{applicationid}/smartgroups/{smartgroupid}": {
      "post": {
        "tags": [
          "SmartGroup"
        ],
        "summary": "Assigns a Smart Group to an Internal Application.",
        "description": "v1",
        "operationId": "SmartGroup_AddInternalAppToSmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartgroupid",
            "in": "path",
            "description": "SmartGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "SmartGroup"
        ],
        "summary": "Removes the Smart Group Assignment from an Internal Application.",
        "description": "v1",
        "operationId": "SmartGroup_RemoveInternalAppFromSmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartgroupid",
            "in": "path",
            "description": "SmartGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/public/{applicationid}/smartgroups/{smartgroupid}": {
      "delete": {
        "tags": [
          "SmartGroup"
        ],
        "summary": "Removes the Smart Group Assignment from a Public Application.",
        "description": "v1",
        "operationId": "SmartGroup_RemovePublicAppFromSmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartgroupid",
            "in": "path",
            "description": "SmartGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/apps/purchased/{applicationid}/deletesmartgroup/{smartgroupid}": {
      "delete": {
        "tags": [
          "SmartGroup"
        ],
        "summary": "Deletes SmartGroup assignment from a purchased app.",
        "description": "v1",
        "operationId": "SmartGroup_DeleteSmartGroupAssignment",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartgroupid",
            "in": "path",
            "description": "SmartGroup Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/internal/{applicationid}/addsmartgroup/{smartgroupid}": {
      "post": {
        "tags": [
          "SmartGroup"
        ],
        "summary": "Assigns a Smart Group to an Internal Application.",
        "description": "v1",
        "operationId": "SmartGroup_AddInternalApplicationToSmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartgroupid",
            "in": "path",
            "description": "SmartGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/public/{applicationid}/addsmartgroup/{smartgroupid}": {
      "post": {
        "tags": [
          "SmartGroup"
        ],
        "summary": "Assigns a Smart Group to an Public Application.",
        "description": "v1",
        "operationId": "SmartGroup_AddPublicApplicationToSmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartgroupid",
            "in": "path",
            "description": "SmartGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/internal/{applicationid}/deletesmartgroup/{smartgroupid}": {
      "post": {
        "tags": [
          "SmartGroup"
        ],
        "summary": "Removes the Smart Group Assignment from an Internal Application.",
        "description": "v1",
        "operationId": "SmartGroup_RemoveInternalApplicationFromSmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartgroupid",
            "in": "path",
            "description": "SmartGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/public/{applicationid}/deletesmartgroup/{smartgroupid}": {
      "post": {
        "tags": [
          "SmartGroup"
        ],
        "summary": "Removes the Smart Group Assignment from a Public Application.",
        "description": "v1",
        "operationId": "SmartGroup_RemovePublicApplicationFromSmartGroup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "applicationid",
            "in": "path",
            "description": "Application Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "smartgroupid",
            "in": "path",
            "description": "SmartGroup Id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {},
        "deprecated": true
      }
    },
    "/apps/publicapps/smartgroups": {
      "post": {
        "tags": [
          "SmartGroup"
        ],
        "summary": "Assign multiple Public Applications to Smart Groups.",
        "operationId": "SmartGroup_AssignPublicAppsToSmartGroups",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "smartGroupPublicAppsAssignment",
            "in": "body",
            "description": "List of SmartGroup Id's and Public Application Id's for assignment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmartGroupPublicAppsAssignmentModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/thirdpartyintegration/apps/add": {
      "post": {
        "tags": [
          "ThirdPartyIntegration"
        ],
        "summary": "Add/Update ThirdPartyAppScanPolicy to AirWatch.",
        "description": "v1",
        "operationId": "ThirdPartyIntegration_AddThirdPartyVendorApps",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "apps",
            "in": "body",
            "description": "ThirdPartyApps",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThirdPartyApps"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/thirdpartyintegration/policies/add": {
      "post": {
        "tags": [
          "ThirdPartyIntegration"
        ],
        "summary": "Add/Update ThirdPartyAppScanPolicy to AirWatch.",
        "description": "v1",
        "operationId": "ThirdPartyIntegration_AddThirdPartyPolicies",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "policies",
            "in": "body",
            "description": "ThirdPartyAppScanPolicies to be Added/upated to Airwatch.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ThirdPartyPolicy"
              }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/thirdpartyintegration/policy/{policyid}/delete": {
      "delete": {
        "tags": [
          "ThirdPartyIntegration"
        ],
        "summary": "Deletes the specified ThirdPartyAppScan Policy from AirWatch.",
        "description": "v1",
        "operationId": "ThirdPartyIntegration_DeleteThirdPartyPolicy",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "policyid",
            "in": "path",
            "description": "VendorPolicyID to be deleted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/thirdpartyintegration/apps/delete": {
      "delete": {
        "tags": [
          "ThirdPartyIntegration"
        ],
        "summary": "Deletes the third party applications from AirWatch",
        "description": "v1",
        "operationId": "ThirdPartyIntegration_DeleteThirdPartyApps",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "bulkInput",
            "in": "body",
            "description": "Bulk Input containing Application Identifiers and Policy Ids.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThirdPartyApps"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/thirdpartyintegration/tenant": {
      "put": {
        "tags": [
          "ThirdPartyIntegration"
        ],
        "summary": "New - Updating Tenant for Location Group.",
        "description": "v1",
        "operationId": "ThirdPartyIntegration_UpdateTenant",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization Group ID.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientcertificateid",
            "in": "query",
            "description": "Client Certificate Id.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "vendorendpointurl",
            "in": "query",
            "description": "Vendor End Point Url.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "ThirdPartyIntegration"
        ],
        "summary": "New - Adding Tenant for Location Group.",
        "description": "v1",
        "operationId": "ThirdPartyIntegration_AddTenant",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization Group ID.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientcertificateid",
            "in": "query",
            "description": "Client Certificate Id.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "vendorendpointurl",
            "in": "query",
            "description": "Vendor End Point Url.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "ThirdPartyIntegration"
        ],
        "summary": "New - Delete Tenant in Location Group.",
        "description": "v1",
        "operationId": "ThirdPartyIntegration_DeleteTenant",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization Group ID.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/thirdpartyintegration/certificatedetails": {
      "get": {
        "tags": [
          "ThirdPartyIntegration"
        ],
        "summary": "New - Getting Certificate Details of Integration Service Tls Client Certificate, Vendor Tls Client Certificate and Console Tls Client Certificate.",
        "description": "v1",
        "operationId": "ThirdPartyIntegration_CertificateDetails",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization Group ID.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/thirdpartyintegration/syncapps": {
      "post": {
        "tags": [
          "ThirdPartyIntegration"
        ],
        "summary": "New - Sync Apps for getting App Groups.",
        "description": "v1",
        "operationId": "ThirdPartyIntegration_SyncApps",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "organizationgroupid",
            "in": "query",
            "description": "Organization Group ID.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "actiontype",
            "in": "query",
            "description": "App Scan Action Type",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/thirdpartyintegration/refreshapps": {
      "post": {
        "tags": [
          "ThirdPartyIntegration"
        ],
        "summary": "New - Refresh Apps for getting App Groups.",
        "description": "v1",
        "operationId": "ThirdPartyIntegration_RefreshApps",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json;version=1",
          "application/xml;version=1"
        ],
        "parameters": [
          {
            "name": "actiontype",
            "in": "query",
            "description": "App Scan Action Type",
            "required": false,
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "type": "string"
          },
          {
            "name": "aw-tenant-code",
            "in": "header",
            "description": "API key",
            "type": "string"
          }
        ],
        "responses": {}
      }
    }
  },
  "definitions": {
    "ApplicationGroup": {
      "type": "object",
      "properties": {
        "ApplicationGroupID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Platform": {
          "type": "string"
        },
        "AppGroupType": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ManagedByOrganizationGroupID": {
          "type": "string"
        },
        "OrganizationGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppGroupOG"
          }
        },
        "UserGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppGroupUserGroup"
          }
        },
        "DeviceOwnership": {
          "type": "string"
        },
        "DeviceModel": {
          "type": "string"
        },
        "DeviceOperatingSystem": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "AppCount": {
          "type": "string"
        },
        "Applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGroupItem"
          }
        }
      },
      "example": {
        "ApplicationGroupID": "test",
        "Name": "test",
        "Platform": "test",
        "AppGroupType": "test",
        "Description": "test",
        "ManagedByOrganizationGroupID": "test",
        "OrganizationGroups": [
          {
            "Name": "test",
            "Id": "test"
          }
        ],
        "UserGroups": [
          {
            "Name": "test",
            "Id": "test"
          }
        ],
        "DeviceOwnership": "test",
        "DeviceModel": "test",
        "DeviceOperatingSystem": "test",
        "IsActive": true,
        "AppCount": "test",
        "Applications": [
          {
            "Name": "test",
            "BundleId": "test"
          }
        ]
      }
    },
    "AppGroupOG": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Id": {
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "Id": "test"
      }
    },
    "AppGroupUserGroup": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Id": {
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "Id": "test"
      }
    },
    "ApplicationGroupItem": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "BundleId": {
          "type": "string"
        }
      },
      "example": {
        "Name": "test",
        "BundleId": "test"
      }
    },
    "IActionResult": {
      "description": "interface for HttpActionResult",
      "type": "object",
      "properties": {
        "RequestQuery": {
          "$ref": "#/definitions/IRequestQuery",
          "description": "Gets or sets the RequestQuery"
        },
        "RequestMessage": {
          "description": "Gets or sets the RequestMessage",
          "type": "object",
          "example": {
            "Version": {
              "Major": 1,
              "Minor": 1,
              "Build": -1,
              "Revision": -1,
              "MajorRevision": -1,
              "MinorRevision": -1
            },
            "Method": {
              "Method": "GET"
            },
            "RequestUri": "http://air-watch.com",
            "Headers": [],
            "Properties": {}
          }
        },
        "HttpStatusCode": {
          "format": "int32",
          "description": "Gets or sets HttpStatusCode",
          "enum": [
            100,
            101,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            300,
            300,
            301,
            301,
            302,
            302,
            303,
            303,
            304,
            305,
            306,
            307,
            307,
            400,
            401,
            402,
            403,
            404,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            417,
            426,
            500,
            501,
            502,
            503,
            504,
            505
          ],
          "type": "integer"
        },
        "Model": {
          "description": "Gets or sets Model",
          "type": "object",
          "example": {}
        },
        "Stream": {
          "$ref": "#/definitions/Stream",
          "description": "Gets or sets Stream"
        },
        "ByteArray": {
          "format": "byte",
          "description": "Gets or sets ByteArray",
          "type": "string"
        },
        "FileName": {
          "description": "Gets or sets FileName {Will be set in the content-disposition header}",
          "type": "string"
        },
        "MediaType": {
          "description": "Gets or sets MediaType",
          "type": "string"
        },
        "OnStreamAvailable": {
          "description": "Gets or sets OnStreamAvailable",
          "type": "object"
        },
        "ETagHeaderValue": {
          "$ref": "#/definitions/EntityTagHeaderValue",
          "description": "Gets or sets ResponseHeaders"
        },
        "LocationHeaderValue": {
          "description": "Gets or sets LocationHeaderValue",
          "type": "string"
        }
      }
    },
    "IRequestQuery": {
      "description": "Interface for IAwRequestQuery\r\nThis will hold all the required data for a request. Will be filled from ModelBinder",
      "type": "object",
      "properties": {
        "QueryParams": {
          "description": "Gets or sets Query Parameters. For e.g. any query string parameters will be extracted to key,value pair and stored here.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "TenantContext": {
          "$ref": "#/definitions/ITenantContext",
          "description": "Gets or sets IAwTenantContext. Will hold the tenant details, which will be filled as part of the tenant validation handler"
        },
        "RequestMethod": {
          "$ref": "#/definitions/HttpMethod",
          "description": "Gets or sets RequestMethod. Will be used to write custom rules"
        },
        "ActionName": {
          "description": "Gets or sets ActionName",
          "type": "string"
        },
        "AllowedUriQueryChars": {
          "description": "Gets or sets allowed Characters in Query String.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Stream": {
      "type": "object",
      "properties": {
        "__identity": {
          "type": "object",
          "example": {}
        }
      }
    },
    "EntityTagHeaderValue": {
      "type": "object",
      "properties": {
        "Tag": {
          "type": "string",
          "readOnly": true
        },
        "IsWeak": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ITenantContext": {
      "description": "Contract for TenantContext. Will be exposed from RequestQuery and will be injected to every controller actions and Business method",
      "type": "object",
      "properties": {
        "TenantCode": {
          "description": "Gets or sets TenantCode. Uniquely identify the tenant for the request",
          "type": "string"
        },
        "OrganizationgroupId": {
          "$ref": "#/definitions/EntityId",
          "description": "Gets or sets Organization Group ID"
        }
      }
    },
    "HttpMethod": {
      "type": "object",
      "properties": {
        "Method": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EntityId": {
      "type": "object",
      "properties": {
        "Value": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "Value": 1
      }
    },
    "BulkInput": {
      "type": "object",
      "properties": {
        "BulkValues": {
          "$ref": "#/definitions/BulkValues"
        }
      },
      "example": {}
    },
    "BulkValues": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BulkResponse": {
      "type": "object",
      "properties": {
        "TotalItems": {
          "format": "int32",
          "type": "integer"
        },
        "AcceptedItems": {
          "format": "int32",
          "type": "integer"
        },
        "FailedItems": {
          "format": "int32",
          "type": "integer"
        },
        "Faults": {
          "$ref": "#/definitions/Faults"
        }
      },
      "example": {
        "TotalItems": 1,
        "AcceptedItems": 1,
        "FailedItems": 1
      }
    },
    "Faults": {
      "type": "object",
      "properties": {
        "Fault": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Fault"
          }
        }
      }
    },
    "Fault": {
      "type": "object",
      "properties": {
        "ErrorCode": {
          "format": "int32",
          "type": "integer"
        },
        "ItemValue": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        }
      },
      "example": {
        "ErrorCode": 1,
        "ItemValue": "test",
        "Message": "test"
      }
    },
    "BulkAppInput": {
      "type": "object",
      "properties": {
        "Applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGroupItem"
          }
        }
      }
    },
    "RequestQuery": {
      "description": "Implementation for RequestQuery",
      "type": "object",
      "properties": {}
    },
    "ApplicationGroupSearchResult": {
      "type": "object",
      "properties": {
        "AppGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGroup"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BaseNotification": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "expiration": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "properties": {
          "type": "string"
        },
        "body": {
          "type": "string"
        }
      },
      "example": {
        "type": "test",
        "expiration": "test",
        "timestamp": "test",
        "properties": "test",
        "body": "test"
      }
    },
    "ApplicationSearchResult": {
      "type": "object",
      "properties": {
        "Application": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationEntity"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ApplicationEntity": {
      "type": "object",
      "properties": {
        "ApplicationName": {
          "type": "string"
        },
        "BundleId": {
          "type": "string"
        },
        "AppVersion": {
          "type": "string"
        },
        "ActualFileVersion": {
          "type": "string"
        },
        "AppType": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "Platform": {
          "format": "int32",
          "type": "integer"
        },
        "SupportedModels": {
          "$ref": "#/definitions/ApplicationSupportedModels"
        },
        "AssignmentStatus": {
          "type": "string"
        },
        "ApplicationSize": {
          "type": "string"
        },
        "CategoryList": {
          "$ref": "#/definitions/ApplicationCategories"
        },
        "SmartGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupAppMap"
          }
        },
        "Comments": {
          "type": "string"
        },
        "IsReimbursable": {
          "type": "boolean"
        },
        "ApplicationUrl": {
          "type": "string"
        },
        "ApplicationSource": {
          "format": "int32",
          "type": "integer"
        },
        "LocationGroupId": {
          "format": "int64",
          "type": "integer"
        },
        "ExternalId": {
          "type": "string"
        },
        "LargeIconUri": {
          "type": "string"
        },
        "MediumIconUri": {
          "type": "string"
        },
        "SmallIconUri": {
          "type": "string"
        },
        "PushMode": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "AppRank": {
          "format": "int32",
          "type": "integer"
        },
        "AssignedDeviceCount": {
          "format": "int32",
          "type": "integer"
        },
        "InstalledDeviceCount": {
          "format": "int32",
          "type": "integer"
        },
        "NotInstalledDeviceCount": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "SupportEmail": {
          "type": "string"
        },
        "SupportPhone": {
          "type": "string"
        },
        "Developer": {
          "type": "string"
        },
        "DeveloperEmail": {
          "type": "string"
        },
        "DeveloperPhone": {
          "type": "string"
        },
        "AutoUpdateVersion": {
          "type": "boolean"
        },
        "EnableProvisioning": {
          "type": "boolean"
        },
        "SupportedProcessorArchitecture": {
          "type": "string"
        },
        "MsiDeploymentParamModel": {
          "$ref": "#/definitions/MsiDeploymentParamModel"
        },
        "IsDependencyFile": {
          "type": "boolean"
        },
        "DeploymentOptions": {
          "$ref": "#/definitions/ApplicationDeploymentOptionsModel"
        },
        "FilesOptions": {
          "$ref": "#/definitions/ApplicationFilesOptionsModel"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      }
    },
    "ApplicationSupportedModels": {
      "type": "object",
      "properties": {
        "Model": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationSupportedModel"
          }
        }
      }
    },
    "ApplicationCategories": {
      "type": "object",
      "properties": {
        "Category": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Category"
          }
        }
      }
    },
    "SmartGroupAppMap": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "Id": 1,
        "Name": "test"
      }
    },
    "MsiDeploymentParamModel": {
      "type": "object",
      "properties": {
        "CommandLineArguments": {
          "type": "string"
        },
        "InstallTimeoutInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "RetryCount": {
          "format": "int32",
          "type": "integer"
        },
        "RetryIntervalInMinutes": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "CommandLineArguments": "test",
        "InstallTimeoutInMinutes": 1,
        "RetryCount": 1,
        "RetryIntervalInMinutes": 1
      }
    },
    "ApplicationDeploymentOptionsModel": {
      "type": "object",
      "properties": {
        "WhenToInstall": {
          "$ref": "#/definitions/WhenToInstallModel"
        },
        "HowToInstall": {
          "$ref": "#/definitions/HowToInstallModel"
        },
        "WhenToCallInstallComplete": {
          "$ref": "#/definitions/WhenToCallInstallCompleteModel"
        }
      },
      "example": {}
    },
    "ApplicationFilesOptionsModel": {
      "type": "object",
      "properties": {
        "AppDependenciesList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationDependencyModel"
          }
        },
        "AppTransformsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationTransformModel"
          }
        },
        "AppPatchesList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationPatchModel"
          }
        },
        "ApplicationUnInstallProcess": {
          "$ref": "#/definitions/ApplicationUnInstallProcessModel"
        }
      },
      "example": {
        "AppDependenciesList": [
          {
            "Name": "test",
            "ApplicationDependencyId": 1
          }
        ],
        "AppTransformsList": [
          {
            "TransformFileName": "test",
            "TransformBlobId": 1
          }
        ],
        "AppPatchesList": [
          {
            "PatchFileName": "test",
            "PatchBlobId": 1,
            "PatchType": "Unknown",
            "BuildVersion": "test"
          }
        ]
      }
    },
    "ApplicationSupportedModel": {
      "type": "object",
      "properties": {
        "ApplicationId": {
          "format": "int32",
          "type": "integer"
        },
        "ModelId": {
          "format": "int32",
          "type": "integer"
        },
        "ModelName": {
          "type": "string"
        }
      },
      "example": {
        "ApplicationId": 0,
        "ModelId": 1,
        "ModelName": "test"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "CategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      },
      "example": {
        "CategoryId": 1,
        "Name": "test"
      }
    },
    "WhenToInstallModel": {
      "type": "object",
      "properties": {
        "DataContingencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentByCriteriaModel"
          }
        },
        "DiskSpaceRequiredInKb": {
          "format": "int32",
          "type": "integer"
        },
        "DevicePowerRequired": {
          "format": "int32",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        },
        "RamRequiredInMb": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "DataContingencies": [
          {
            "CriteriaType": "Unknown",
            "LogicalCondition": "Unknown"
          }
        ],
        "DiskSpaceRequiredInKb": 1,
        "DevicePowerRequired": 1,
        "RamRequiredInMb": 1
      }
    },
    "HowToInstallModel": {
      "type": "object",
      "properties": {
        "InstallContext": {
          "type": "string"
        },
        "InstallCommand": {
          "type": "string"
        },
        "AdminPrivileges": {
          "type": "boolean"
        },
        "DeviceRestart": {
          "type": "string"
        },
        "RetryCount": {
          "format": "int32",
          "type": "integer"
        },
        "RetryIntervalInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "InstallTimeoutInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "InstallerRebootExitCode": {
          "type": "string"
        },
        "InstallerSuccessExitCode": {
          "type": "string"
        }
      },
      "example": {
        "InstallContext": "Unknown",
        "InstallCommand": "test",
        "AdminPrivileges": true,
        "DeviceRestart": "Unknown",
        "RetryCount": 1,
        "RetryIntervalInMinutes": 1,
        "InstallTimeoutInMinutes": 1,
        "InstallerRebootExitCode": "test",
        "InstallerSuccessExitCode": "test"
      }
    },
    "WhenToCallInstallCompleteModel": {
      "type": "object",
      "properties": {
        "UseAdditionalCriteria": {
          "type": "boolean"
        },
        "IdentifyApplicationBy": {
          "type": "string"
        },
        "CriteriaList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentByCriteriaModel"
          }
        },
        "CustomScript": {
          "$ref": "#/definitions/DeploymentByCustomScriptModel"
        }
      },
      "example": {
        "UseAdditionalCriteria": true,
        "IdentifyApplicationBy": "Unknown",
        "CriteriaList": [
          {
            "CriteriaType": "Unknown",
            "LogicalCondition": "Unknown"
          }
        ]
      }
    },
    "ApplicationDependencyModel": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "ApplicationDependencyId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Name": "test",
        "ApplicationDependencyId": 1
      }
    },
    "ApplicationTransformModel": {
      "type": "object",
      "properties": {
        "TransformFileName": {
          "type": "string"
        },
        "TransformBlobId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "TransformFileName": "test",
        "TransformBlobId": 1
      }
    },
    "ApplicationPatchModel": {
      "type": "object",
      "properties": {
        "PatchFileName": {
          "type": "string"
        },
        "PatchBlobId": {
          "format": "int32",
          "type": "integer"
        },
        "PatchType": {
          "type": "string"
        },
        "BuildVersion": {
          "type": "string"
        }
      },
      "example": {
        "PatchFileName": "test",
        "PatchBlobId": 1,
        "PatchType": "Unknown",
        "BuildVersion": "test"
      }
    },
    "ApplicationUnInstallProcessModel": {
      "type": "object",
      "properties": {
        "UseCustomScript": {
          "type": "boolean"
        },
        "CustomScript": {
          "$ref": "#/definitions/CustomScriptModel"
        }
      },
      "example": {
        "UseCustomScript": true
      }
    },
    "DeploymentByCriteriaModel": {
      "type": "object",
      "properties": {
        "CriteriaType": {
          "type": "string"
        },
        "AppCriteria": {
          "$ref": "#/definitions/AppCriteriaModel"
        },
        "FileCriteria": {
          "$ref": "#/definitions/FileCriteriaModel"
        },
        "RegistryCriteria": {
          "$ref": "#/definitions/RegistryCriteriaModel"
        },
        "LogicalCondition": {
          "type": "string"
        }
      },
      "example": {
        "CriteriaType": "Unknown",
        "LogicalCondition": "Unknown"
      }
    },
    "DeploymentByCustomScriptModel": {
      "type": "object",
      "properties": {
        "ScriptType": {
          "type": "string"
        },
        "CommandToRunTheScript": {
          "type": "string"
        },
        "CustomScriptFileBlodId": {
          "format": "int32",
          "type": "integer"
        },
        "SuccessExitCode": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "ScriptType": "Unknown",
        "CommandToRunTheScript": "test",
        "CustomScriptFileBlodId": 1,
        "SuccessExitCode": 1
      }
    },
    "CustomScriptModel": {
      "type": "object",
      "properties": {
        "CustomScriptType": {
          "type": "string"
        },
        "UninstallCommand": {
          "type": "string"
        },
        "UninstallScriptBlobId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "CustomScriptType": "Unknown",
        "UninstallCommand": "test",
        "UninstallScriptBlobId": 1
      }
    },
    "AppCriteriaModel": {
      "type": "object",
      "properties": {
        "ApplicationIdentifier": {
          "type": "string"
        },
        "VersionCondition": {
          "type": "string"
        },
        "MajorVersion": {
          "format": "int32",
          "type": "integer"
        },
        "MinorVersion": {
          "format": "int32",
          "type": "integer"
        },
        "RevisionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "BuildNumber": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "FileCriteriaModel": {
      "type": "object",
      "properties": {
        "Path": {
          "type": "string"
        },
        "VersionCondition": {
          "type": "string"
        },
        "MajorVersion": {
          "format": "int32",
          "type": "integer"
        },
        "MinorVersion": {
          "format": "int32",
          "type": "integer"
        },
        "RevisionNumber": {
          "format": "int32",
          "type": "integer"
        },
        "BuildNumber": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedOn": {
          "type": "string"
        }
      }
    },
    "RegistryCriteriaModel": {
      "type": "object",
      "properties": {
        "Path": {
          "type": "string"
        },
        "KeyName": {
          "type": "string"
        },
        "KeyType": {
          "type": "string"
        },
        "KeyValue": {
          "type": "string"
        }
      },
      "example": {
        "Path": "test",
        "KeyName": "test",
        "KeyType": "Unknown",
        "KeyValue": "test"
      }
    },
    "ManagementStatus": {
      "type": "object",
      "properties": {
        "Status": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Status": 1
      }
    },
    "AppStoreSearchResults": {
      "type": "object",
      "properties": {
        "Applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppStoreApplicationDetails"
          }
        }
      },
      "example": {
        "Applications": [
          {
            "BundleID": "test",
            "ApplicationName": "test",
            "CurrentVersion": "test",
            "ExternalID": "test"
          }
        ]
      }
    },
    "AppStoreApplicationDetails": {
      "type": "object",
      "properties": {
        "BundleID": {
          "type": "string"
        },
        "ApplicationName": {
          "type": "string"
        },
        "CurrentVersion": {
          "type": "string"
        },
        "ExternalID": {
          "type": "string"
        }
      },
      "example": {
        "BundleID": "test",
        "ApplicationName": "test",
        "CurrentVersion": "test",
        "ExternalID": "test"
      }
    },
    "ApplicationEventSampleSearchResult": {
      "type": "object",
      "properties": {
        "ApplicationEventSamples": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationEventSampleSearchResultEntity"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ApplicationEventSampleSearchResultEntity": {
      "type": "object",
      "properties": {
        "DeviceID": {
          "format": "int32",
          "type": "integer"
        },
        "SampleTime": {
          "format": "date-time",
          "type": "string"
        },
        "ApplicationID": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "UserName": {
          "type": "string"
        },
        "FriendlyName": {
          "type": "string"
        },
        "EventName": {
          "type": "string"
        },
        "EventData": {
          "type": "string"
        }
      }
    },
    "CatalogAppsResultModel": {
      "description": "CatalogAppsResultModel",
      "type": "object",
      "properties": {
        "awCatalogItems": {
          "description": "List of application details for the device",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationCatalogInfoModel"
          }
        }
      }
    },
    "ApplicationCatalogInfoModel": {
      "description": "ApplicationCatalogInfoModel",
      "type": "object",
      "properties": {
        "name": {
          "description": "Application Name",
          "type": "string"
        },
        "bundleId": {
          "description": "Bundle/Package Identifier of the application",
          "type": "string"
        },
        "type": {
          "description": "The {WanderingWiFi.AirWatch.Entity.Device.Application.CatalogService.CatalogEnumerations.AppType} type of the item",
          "type": "string"
        },
        "installState": {
          "description": "The {WanderingWiFi.AirWatch.Entity.Device.Application.CatalogService.CatalogEnumerations.InstallState} state of the item",
          "type": "string"
        },
        "externalStoreAppId": {
          "description": "The store Id of the app on the public app store (like google play, itunes)\r\nOnly applicable for public apps",
          "type": "string"
        },
        "icon": {
          "description": "The url for the icon of the item",
          "type": "string"
        },
        "version": {
          "description": "If versioned what version is this item",
          "type": "string"
        },
        "versionHash": {
          "description": "VersionHash of the Application",
          "type": "string"
        },
        "scheme": {
          "description": "Scheme of the application used to launch the app in iOS",
          "type": "string"
        },
        "groups": {
          "description": "The groups responding to special attributes with this item\r\nExamples include \"featured\", \"required\", \"updates\", etc.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "categories": {
          "description": "All of the categories for a given item",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "activationUrl": {
          "description": "The url that will allow an app to be opened and is passed attributes in the url",
          "type": "string"
        },
        "description": {
          "description": "For certain item types, like Products, we do not currently\r\nhave an api to load the description seperately from the lite items load.\r\nSo for ONLY those situations, we will allow the description to be passed here",
          "type": "string"
        },
        "supervisedOrEnterpriseApp": {
          "description": "Load if the device is an iOS supervised device or if its and Android Enterprise App",
          "type": "boolean"
        },
        "eulaId": {
          "$ref": "#/definitions/EntityKey",
          "description": "EULA ID associated with the application"
        },
        "appId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Id of the Application"
        },
        "iconId": {
          "$ref": "#/definitions/EntityKey",
          "description": "Blob Id of the Icon.\r\n{AW.Mam.Api.Model.ApplicationCatalogInfoModel.Icon} is generated using the IconId"
        },
        "rating": {
          "format": "int32",
          "description": "The averaged rating for the item",
          "type": "integer"
        },
        "isPaid": {
          "description": "Is the app a paid application",
          "type": "boolean"
        },
        "currency": {
          "description": "The Currency set for the cost of this application. ex: \"USD\"",
          "type": "string"
        },
        "isBeta": {
          "description": "Flag to indicate if the admin specified as this being the beta version",
          "type": "boolean"
        },
        "usesSDK": {
          "description": "Flag to indicate the app uses the AW SDK",
          "type": "boolean"
        },
        "size": {
          "format": "int32",
          "description": "The size of the downloadable file for this item",
          "type": "integer"
        },
        "creator": {
          "description": "The creator/developer of the application",
          "type": "string"
        },
        "installMessageType": {
          "description": "The install prompt message that needs to shown when user clicks install for an app",
          "type": "string"
        },
        "requireManagement": {
          "description": "To support adaptive access",
          "type": "boolean"
        },
        "webClipUrl": {
          "description": "Web clip URL",
          "type": "string"
        },
        "packageFamilyName": {
          "description": "Package Family Name",
          "type": "string"
        },
        "deploymentType": {
          "description": "Deployment Type",
          "type": "string"
        }
      },
      "example": {
        "name": "test",
        "bundleId": "test",
        "type": "test",
        "installState": "test",
        "externalStoreAppId": "test",
        "icon": "test",
        "version": "test",
        "versionHash": "test",
        "scheme": "test",
        "groups": [
          "test"
        ],
        "categories": [
          "test"
        ],
        "activationUrl": "test",
        "description": "test",
        "supervisedOrEnterpriseApp": true,
        "rating": 1,
        "isPaid": true,
        "currency": "test",
        "isBeta": true,
        "usesSDK": true,
        "size": 1,
        "creator": "test",
        "installMessageType": "test",
        "requireManagement": true,
        "webClipUrl": "test",
        "packageFamilyName": "test",
        "deploymentType": "test"
      }
    },
    "EntityKey": {
      "type": "object",
      "properties": {
        "_value": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Value": 1
      }
    },
    "CatalogServiceResult": {
      "type": "object",
      "properties": {
        "developerMessage": {
          "type": "string"
        },
        "installSuccessful": {
          "type": "boolean"
        },
        "installUrl": {
          "type": "string"
        },
        "enrollmentUrl": {
          "type": "string"
        },
        "privacyUrl": {
          "type": "string"
        },
        "installMessage": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "complimentaryAppData": {
          "$ref": "#/definitions/AppInstallResultComplimentaryDataEntity"
        }
      },
      "example": {
        "developerMessage": "test",
        "installSuccessful": true,
        "installUrl": "test",
        "enrollmentUrl": "test",
        "privacyUrl": "test",
        "installMessage": "test",
        "type": "test"
      }
    },
    "AppInstallResultComplimentaryDataEntity": {
      "type": "object",
      "properties": {
        "EulaId": {
          "format": "int32",
          "type": "integer"
        },
        "EulaContent": {
          "type": "string"
        },
        "EulaVersion": {
          "format": "int32",
          "type": "integer"
        },
        "EulaContentId": {
          "format": "int32",
          "type": "integer"
        },
        "Message": {
          "type": "string"
        },
        "VPPInviteUrl": {
          "type": "string"
        },
        "VPPInviteTitle": {
          "type": "string"
        },
        "VPPInviteMessage": {
          "type": "string"
        },
        "WNSErrorMessage": {
          "type": "string"
        }
      },
      "example": {
        "EulaId": 1,
        "EulaContent": "test",
        "EulaVersion": 1,
        "EulaContentId": 1,
        "Message": "test",
        "VPPInviteUrl": "test",
        "VPPInviteTitle": "test",
        "VPPInviteMessage": "test",
        "WNSErrorMessage": "test"
      }
    },
    "AppDetailCatalogResult": {
      "type": "object",
      "properties": {
        "appDetails": {
          "$ref": "#/definitions/ApplicationDetailsEntity"
        },
        "developerMessage": {
          "type": "string"
        }
      },
      "example": {
        "developerMessage": "test"
      }
    },
    "ApplicationDetailsEntity": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Type": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "InstallState": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Screenshots": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Reviews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationReviewDetailsEntity"
          }
        },
        "Support": {
          "$ref": "#/definitions/ApplicationSupportInfoEntity"
        },
        "DetailsLoaded": {
          "type": "boolean"
        },
        "Version": {
          "type": "string"
        },
        "VersionHash": {
          "type": "string"
        },
        "ExternalStoreAppId": {
          "type": "string"
        },
        "PackageFamilyName": {
          "type": "string"
        },
        "Size": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Id": 1,
        "Type": "test",
        "Name": "test",
        "InstallState": "test",
        "Description": "test",
        "Screenshots": [
          "test"
        ],
        "Reviews": [
          {
            "UserId": 1,
            "UserRatingId": 1,
            "Rating": 1,
            "Comments": "test",
            "Date": "test"
          }
        ],
        "DetailsLoaded": true,
        "Version": "test",
        "VersionHash": "test",
        "ExternalStoreAppId": "test",
        "PackageFamilyName": "test",
        "Size": 1
      }
    },
    "ApplicationReviewDetailsEntity": {
      "type": "object",
      "properties": {
        "UserId": {
          "format": "int32",
          "type": "integer"
        },
        "UserRatingId": {
          "format": "int32",
          "type": "integer"
        },
        "Rating": {
          "format": "int32",
          "type": "integer"
        },
        "Comments": {
          "type": "string"
        },
        "Date": {
          "type": "string"
        }
      },
      "example": {
        "UserId": 1,
        "UserRatingId": 1,
        "Rating": 1,
        "Comments": "test",
        "Date": "test"
      }
    },
    "ApplicationSupportInfoEntity": {
      "type": "object",
      "properties": {
        "Email": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        }
      },
      "example": {
        "Email": "test",
        "Phone": "test"
      }
    },
    "EnrollDeviceCatalogResult": {
      "type": "object",
      "properties": {
        "enrollmentURL": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "example": {
        "enrollmentURL": "test",
        "message": "test"
      }
    },
    "UserGroupAssignmentModel": {
      "description": "The user/ user group assignment model for app.",
      "type": "object",
      "properties": {
        "Users": {
          "description": "Gets or sets the user list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAssignmentModel"
          }
        },
        "UserGroups": {
          "description": "Gets or sets the user group list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupAssignmentModel"
          }
        }
      }
    },
    "UserAssignmentModel": {
      "description": "The user assignment model for app.",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the user external id.",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the user name.",
          "type": "string"
        }
      },
      "example": {
        "Id": "test",
        "Name": "test"
      }
    },
    "GroupAssignmentModel": {
      "description": "The user group assignment model for app.",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the user group external id.",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the user group name.",
          "type": "string"
        }
      },
      "example": {
        "Id": "test",
        "Name": "test"
      }
    },
    "ApplicationCategoriesResult": {
      "description": "Application Category List",
      "type": "object",
      "properties": {
        "Categories": {
          "description": "Application details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationCategoryDetails"
          }
        }
      },
      "example": {
        "Categories": [
          {
            "CategoryId": 1,
            "LocationGroupId": 1,
            "Name": "test",
            "Description": "test",
            "LabelKey": "test",
            "ManagedBy": "test",
            "CategoryType": "test"
          }
        ]
      }
    },
    "ApplicationCategoryDetails": {
      "description": "Application Category Details",
      "type": "object",
      "properties": {
        "CategoryId": {
          "format": "int32",
          "description": "Category Id",
          "type": "integer"
        },
        "LocationGroupId": {
          "format": "int32",
          "description": "LocationGroup Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name of Category",
          "type": "string"
        },
        "Description": {
          "description": "Description of Category",
          "type": "string"
        },
        "LabelKey": {
          "description": "LabelKey",
          "type": "string"
        },
        "ManagedBy": {
          "description": "ManagedBy",
          "type": "string"
        },
        "CategoryType": {
          "description": "Type of Category",
          "type": "string"
        }
      },
      "example": {
        "CategoryId": 1,
        "LocationGroupId": 1,
        "Name": "test",
        "Description": "test",
        "LabelKey": "test",
        "ManagedBy": "test",
        "CategoryType": "test"
      }
    },
    "Office365MamIntegrationSettingsModel": {
      "description": "Office365MamIntegrationSettingsModel",
      "type": "object",
      "properties": {
        "DataBackupBlocked": {
          "description": "Gets or sets a value indicating whether prevent backup.",
          "type": "boolean"
        },
        "ContactSyncBlocked": {
          "description": "Gets or sets a value indicating whether contact sync blocked.",
          "type": "boolean"
        },
        "PrintBlocked": {
          "description": "Gets or sets a value indicating whether print blocked.",
          "type": "boolean"
        },
        "PinCharacterSet": {
          "description": "Gets or sets the pin character set.",
          "type": "string"
        },
        "AllowAppsToTransferDataToOtherApps": {
          "description": "Gets or sets the allow app to transfer data to other apps.",
          "type": "string"
        },
        "AllowAppsToReceiveDataFromOtherApps": {
          "description": "Gets or sets the allow app to receive data from other apps.",
          "type": "string"
        },
        "PreventSaveAs": {
          "description": "Gets or sets a value indicating whether prevent save as.",
          "type": "boolean"
        },
        "RestrictCutCopyPasteWithOtherApps": {
          "description": "Gets or sets the restrict cut copy and paste with other apps.",
          "type": "string"
        },
        "RestrictWebContentToDisplayInManagedBrowser": {
          "description": "Gets or sets a value indicating whether restrict web content to display in managed browser.",
          "type": "boolean"
        },
        "EncryptAppDataForIoS": {
          "description": "Gets or sets the encrypt app data.",
          "type": "string"
        },
        "EncryptAppDataForAndroid": {
          "description": "Gets or sets the encrypt app data.",
          "type": "boolean"
        },
        "screenCaptureBlocked": {
          "description": "Gets or sets a value indicating whether block screen capture and android assistant.",
          "type": "boolean"
        },
        "AllowedDataStorageLocations": {
          "description": "Gets or sets the allowed data storage locations.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "RequirePinAccess": {
          "description": "Gets or sets a value indicating whether require pin access.",
          "type": "boolean"
        },
        "MaximumPinRetries": {
          "format": "int32",
          "description": "Gets or sets the maximum pin retries.",
          "type": "integer"
        },
        "AllowSimplePin": {
          "description": "Gets or sets a value indicating whether allow simple pin.",
          "type": "boolean"
        },
        "MinimumPinLength": {
          "format": "int32",
          "description": "Gets or sets the minimum pin length.",
          "type": "integer"
        },
        "AllowFingerprintInsteadOfPin": {
          "description": "Gets or sets a value indicating whether allow fingerprint instead of pin.",
          "type": "boolean"
        },
        "RequireCorporateCredentialsForAccess": {
          "description": "Gets or sets a value indicating whether require corporate credentials for access.",
          "type": "boolean"
        },
        "BlockManagedAppsFromRunningOnJailBrokenOrRootedDevices": {
          "description": "Gets or sets a value indicating whether block managed apps.",
          "type": "boolean"
        },
        "TimeOut": {
          "description": "Gets or sets the timeout to recheck access requirements.",
          "type": "string"
        },
        "GracePeriod": {
          "description": "Gets or sets the offline grace period to recheck access requirements.",
          "type": "string"
        },
        "OfflineIntervalBeforeAppDataIsWiped": {
          "description": "Gets or sets the offline interval before app data is wiped.",
          "type": "string"
        },
        "Office365MamAndroidApplicationPolicyId": {
          "description": "Gets or sets the office 365 mam android application policy id.",
          "type": "string"
        },
        "Office365MamIosApplicationPolicyId": {
          "description": "Gets or sets the office 365 mam ios application policy id.",
          "type": "string"
        },
        "Office365MamApplicationPolicyTimestamp": {
          "format": "date-time",
          "description": "Gets or sets the office 365 mam application policy timestamp.",
          "type": "string"
        },
        "UserGroups": {
          "description": "Gets or sets the user groups.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AndroidApplications": {
          "description": "Gets or sets the android applications.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IosApplications": {
          "description": "Gets or sets the ios applications.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Office365MamIntegrationSettingsResponseModel": {
      "description": "Office365MamIntegrationSettingsModel",
      "type": "object",
      "properties": {
        "AndroidPolicyGuid": {
          "description": "Gets or sets the android policy guid.",
          "type": "string"
        },
        "IosPolicyGuid": {
          "description": "Gets or sets the ios policy guid.",
          "type": "string"
        }
      },
      "example": {
        "AndroidPolicyGuid": "test",
        "IosPolicyGuid": "test"
      }
    },
    "Office365MAMIntegrationCredentialsModel": {
      "description": "Office365MAMIntegrationCredentialsModel",
      "type": "object",
      "properties": {
        "Password": {
          "description": "Gets or sets the password.",
          "type": "string"
        },
        "UserName": {
          "description": "Gets or sets the user name.",
          "type": "string"
        }
      },
      "example": {
        "Password": "test",
        "UserName": "test"
      }
    },
    "SearchAzureUserGroupsResponseModel": {
      "description": "SearchAzureUserGroupsResponseModel",
      "type": "object",
      "properties": {
        "AzureUserGroups": {
          "description": "Gets or sets the azure user groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureUserGroup"
          }
        }
      },
      "example": {
        "AzureUserGroups": [
          {
            "Id": "test",
            "DisplayName": "test"
          }
        ]
      }
    },
    "AzureUserGroup": {
      "description": "AzureUserGroup",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the id.",
          "type": "string"
        },
        "DisplayName": {
          "description": "Gets or sets the display name.",
          "type": "string"
        }
      },
      "example": {
        "Id": "test",
        "DisplayName": "test"
      }
    },
    "CatalogAppsResult": {
      "type": "object",
      "properties": {
        "awCatalogItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationCatalogInfo"
          }
        }
      },
      "example": {}
    },
    "ApplicationCatalogInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "bundleId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "installState": {
          "type": "string"
        },
        "externalStoreAppId": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "scheme": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "activationUrl": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "supervisedOrEnterpriseApp": {
          "type": "boolean"
        },
        "eulaId": {
          "$ref": "#/definitions/EntityKey"
        },
        "appId": {
          "$ref": "#/definitions/EntityKey"
        },
        "iconId": {
          "$ref": "#/definitions/EntityKey"
        },
        "rating": {
          "format": "int32",
          "type": "integer"
        },
        "isPaid": {
          "type": "boolean"
        },
        "currency": {
          "type": "string"
        },
        "isBeta": {
          "type": "boolean"
        },
        "usesSDK": {
          "type": "boolean"
        },
        "size": {
          "format": "int32",
          "type": "integer"
        },
        "creator": {
          "type": "string"
        },
        "installMessageType": {
          "type": "string"
        },
        "requireManagement": {
          "type": "boolean"
        },
        "webClipUrl": {
          "type": "string"
        }
      },
      "example": {
        "name": "test",
        "bundleId": "test",
        "type": "test",
        "installState": "test",
        "externalStoreAppId": "test",
        "icon": "test",
        "version": "test",
        "scheme": "test",
        "groups": [
          "test"
        ],
        "categories": [
          "test"
        ],
        "activationUrl": "test",
        "description": "test",
        "supervisedOrEnterpriseApp": true,
        "rating": 1,
        "isPaid": true,
        "currency": "test",
        "isBeta": true,
        "usesSDK": true,
        "size": 1,
        "creator": "test",
        "installMessageType": "test",
        "requireManagement": true,
        "webClipUrl": "test"
      }
    },
    "AppRemovalProtectionLogSearchResultModel": {
      "description": "App Removal Protections Logs search result",
      "type": "object",
      "properties": {
        "ResultSet": {
          "description": "Gets or sets List of device details resulted in the search operation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppRemovalProtectionModel"
          }
        },
        "AdditionalInfo": {
          "$ref": "#/definitions/HypermediaModel",
          "description": "Gets or sets Hypermedia content for the result"
        },
        "TotalResults": {
          "format": "int32",
          "description": "Gets or sets Total Result",
          "type": "integer"
        }
      }
    },
    "AppRemovalProtectionModel": {
      "description": "This entity represents core properties of App Removal Protection details.",
      "type": "object",
      "properties": {
        "CreatedOn": {
          "format": "date-time",
          "description": "Gets or sets date on which the record was created",
          "type": "string"
        },
        "ModifiedOn": {
          "format": "date-time",
          "description": "Gets or sets date on which the record was modified",
          "type": "string"
        },
        "Identifier": {
          "description": "Gets or sets BundleId of the app for which command was queued",
          "type": "string"
        },
        "Source": {
          "format": "int32",
          "description": "Gets or sets the source of command.",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            -1
          ],
          "type": "integer"
        },
        "ThresholdStatus": {
          "format": "int32",
          "description": "Gets or sets the value of the ThresholdStatus in threshold table.",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "ThresholdId": {
          "format": "int32",
          "description": "Gets or sets the ThresholdId for which command is queued.",
          "type": "integer"
        }
      }
    },
    "HypermediaModel": {
      "description": "The aw hypermedia model.",
      "type": "object",
      "properties": {
        "Links": {
          "description": "Gets the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Links": [],
        "id": 1
      }
    },
    "Link": {
      "description": "The link.",
      "type": "object",
      "properties": {
        "Rel": {
          "description": "Gets or sets the relational links.",
          "type": "string"
        },
        "Href": {
          "description": "Gets or sets the HREF.",
          "type": "string"
        },
        "Title": {
          "description": "Gets or sets the title.",
          "type": "string"
        }
      },
      "example": {
        "Rel": "test",
        "Href": "test",
        "Title": "test"
      }
    },
    "UpdateAppRemovalProtectionModel": {
      "description": "Model for updating the app removal protection logs",
      "type": "object",
      "properties": {
        "ThresholdId": {
          "format": "int32",
          "description": "Gets or sets List of Threshold Id",
          "type": "integer"
        },
        "NewThresholdStatus": {
          "format": "int32",
          "description": "Gets or sets the value of the NewThresholdStatus in Threshold table.",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        }
      },
      "example": {
        "ThresholdId": 1,
        "NewThresholdStatus": 0
      }
    },
    "AppScanServiceReport": {
      "type": "object",
      "properties": {
        "ScanServiceVersion": {
          "type": "string"
        },
        "ScanStatus": {
          "type": "string"
        },
        "ApplicationId": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "PlatformType": {
          "type": "string"
        },
        "ReportVersion": {
          "type": "string"
        },
        "TransactionId": {
          "type": "string"
        },
        "report": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "example": {
        "ScanServiceVersion": "test",
        "ScanStatus": "test",
        "ApplicationId": "test",
        "Version": "test",
        "PlatformType": "test",
        "ReportVersion": "test",
        "TransactionId": "test"
      }
    },
    "AppWrappingServiceReport": {
      "type": "object",
      "properties": {
        "WrappedApplicationSize": {
          "format": "int64",
          "type": "integer"
        },
        "ApplicationWrappingStatus": {
          "format": "int32",
          "enum": [
            0,
            4002,
            4003,
            4004,
            4005
          ],
          "type": "integer"
        },
        "ApplicationWrappingStatusCode": {
          "format": "int32",
          "enum": [
            0,
            1000,
            1010,
            1020,
            1021,
            1030,
            1040,
            1050,
            1052,
            1053,
            1060,
            1099,
            1500,
            2000,
            2001,
            2002,
            2003,
            2004,
            2005,
            2006,
            2007,
            2008,
            2010,
            2011,
            3000,
            3001,
            3010,
            3011,
            3012,
            3013,
            3020,
            3030,
            3031,
            3040,
            3050,
            3060,
            3070,
            3080,
            3081,
            3099,
            4007,
            4008,
            4009,
            4010,
            4020,
            4021,
            4031,
            4040
          ],
          "type": "integer"
        },
        "ApplicationWrappingEngineVersion": {
          "type": "string"
        },
        "ApplicationWrappingDate": {
          "format": "date-time",
          "type": "string"
        },
        "WrappedApplicationDownloadUrl": {
          "type": "string"
        },
        "TransactionId": {
          "type": "string"
        }
      }
    },
    "BookmarksModel": {
      "description": "Bookmarks Model",
      "type": "object",
      "properties": {
        "BookmarkName": {
          "description": "Gets or sets Bookmar kName",
          "type": "string"
        },
        "BookmarkUrl": {
          "description": "Gets or sets Bookmark Url",
          "type": "string"
        },
        "BookmarkNameHash": {
          "description": "Gets or sets Bookmark name hash",
          "type": "string"
        },
        "BookmarkAction": {
          "format": "int32",
          "description": "Gets or sets Bookmark Action",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        }
      },
      "example": {
        "BookmarkName": "test",
        "BookmarkUrl": "test",
        "BookmarkNameHash": "test",
        "BookmarkAction": 0
      }
    },
    "ControllerModel": {
      "description": "Model to define the Controller and its components like Description, custom attributes and end points",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets Name",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets Description",
          "type": "string"
        },
        "endpoints": {
          "description": "Gets or sets EndPoints",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndPointModel"
          }
        },
        "endpointsErrorCount": {
          "format": "int32",
          "description": "Gets or sets the total number of endpoint errors for a particular controller",
          "type": "integer"
        },
        "modified": {
          "description": "Gets or sets a value indicating whether the controller contains a new endpoint",
          "type": "boolean"
        },
        "isinternal": {
          "description": "Gets or sets a value indicating whether the controller is interal",
          "type": "boolean"
        },
        "totalNewEndpoints": {
          "format": "int32",
          "description": "Gets or sets the total number of new endpoints for a particular controller",
          "type": "integer"
        }
      },
      "example": {
        "name": "test",
        "description": "test",
        "endpoints": [
          {
            "isnew": true,
            "isinternal": true,
            "obsolete": "test",
            "routeTemplate": "test",
            "urisample": "test",
            "id": "test",
            "endpointname": "test",
            "description": "test",
            "method": "test",
            "relativePath": "test",
            "ResponseType": "test",
            "validationErrorCount": 1,
            "version": "test"
          }
        ],
        "endpointsErrorCount": 1,
        "modified": true,
        "isinternal": true,
        "totalNewEndpoints": 1
      }
    },
    "EndPointModel": {
      "description": "Class to define the endpoints",
      "type": "object",
      "properties": {
        "isnew": {
          "description": "Gets or sets a value indicating whether it is a new endpoint",
          "type": "boolean"
        },
        "isinternal": {
          "description": "Gets or sets a value indicating whether it is an internal endpoint",
          "type": "boolean"
        },
        "obsolete": {
          "description": "Gets or sets obsolete value if present",
          "type": "string"
        },
        "routeTemplate": {
          "description": "Gets or sets the routeTemplate",
          "type": "string"
        },
        "urisample": {
          "description": "Gets or sets urisample",
          "type": "string"
        },
        "id": {
          "description": "Gets or sets Id",
          "type": "string"
        },
        "endpointname": {
          "description": "Gets or sets Name",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets Description",
          "type": "string"
        },
        "method": {
          "description": "Gets or sets Method",
          "type": "string"
        },
        "relativePath": {
          "description": "Gets or sets RelativePath",
          "type": "string"
        },
        "ResponseType": {
          "description": "Gets or sets ResponseType",
          "type": "string"
        },
        "endPointDetails": {
          "$ref": "#/definitions/EndPointDetailsModel",
          "description": "Gets or sets EndPointDetails"
        },
        "validationResults": {
          "$ref": "#/definitions/EndpointValidationResult",
          "description": "Gets or sets validation results"
        },
        "validationErrorCount": {
          "format": "int32",
          "description": "Gets or sets validation error count",
          "type": "integer"
        },
        "version": {
          "description": "Gets or sets version of endpoint if it exists",
          "type": "string"
        }
      },
      "example": {
        "isnew": true,
        "isinternal": true,
        "obsolete": "test",
        "routeTemplate": "test",
        "urisample": "test",
        "id": "test",
        "endpointname": "test",
        "description": "test",
        "method": "test",
        "relativePath": "test",
        "ResponseType": "test",
        "validationErrorCount": 1,
        "version": "test"
      }
    },
    "EndPointDetailsModel": {
      "description": "Class to define the model for the endpoint",
      "type": "object",
      "properties": {
        "parameters": {
          "description": "Gets or sets Parameters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterModel"
          }
        },
        "queryStringParameters": {
          "description": "Gets or sets QueryStringParams",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterModel"
          }
        },
        "resourceDescription": {
          "$ref": "#/definitions/ModelDescription",
          "description": "Gets or sets the {AW.WebApi.Common.Documentation.ModelDescriptions.ModelDescription} that describes the resource."
        },
        "sampleRequests": {
          "description": "Gets or sets the sample requests associated with the API.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "example": {}
          }
        },
        "sampleResponses": {
          "description": "Gets or sets  sample responses associated with the API.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "example": {}
          }
        },
        "sampleQueryString": {
          "description": "Gets or sets SampleQueryString",
          "type": "string"
        },
        "validationResults": {
          "$ref": "#/definitions/EndpointValidationResult",
          "description": "Gets or sets validation results"
        }
      },
      "example": {
        "sampleQueryString": "test"
      }
    },
    "EndpointValidationResult": {
      "description": "EndpointValidationResult class",
      "type": "object",
      "properties": {
        "isValid": {
          "description": "Gets or sets a value indicating whether IsValid",
          "type": "boolean"
        },
        "errors": {
          "description": "Gets or sets Errors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointValidationError"
          }
        }
      },
      "example": {
        "isValid": true,
        "errors": [
          {
            "propertyName": "test",
            "errorMessage": "test"
          }
        ]
      }
    },
    "ParameterModel": {
      "description": "Class to define the parameters",
      "type": "object",
      "properties": {
        "paramName": {
          "description": "Gets or sets Name",
          "type": "string"
        },
        "paramType": {
          "description": "Gets or sets Type",
          "type": "string"
        },
        "paramDescription": {
          "description": "Gets or sets Description",
          "type": "string"
        },
        "paramSource": {
          "description": "Gets or sets Source",
          "type": "string"
        }
      }
    },
    "ModelDescription": {
      "description": "Describes a type model.",
      "type": "object",
      "properties": {
        "modelDocumentation": {
          "type": "string"
        },
        "modelType": {
          "type": "string"
        },
        "modelName": {
          "type": "string"
        }
      },
      "example": {
        "modelDocumentation": "test",
        "modelName": "test"
      }
    },
    "EndpointValidationError": {
      "description": "EndpointValidationError class",
      "type": "object",
      "properties": {
        "propertyName": {
          "description": "Gets or sets PropertyName",
          "type": "string"
        },
        "errorMessage": {
          "description": "Gets or sets ErrorMessage",
          "type": "string"
        }
      },
      "example": {
        "propertyName": "test",
        "errorMessage": "test"
      }
    },
    "EndpointIndexModel": {
      "description": "Endpoint Index Model",
      "type": "object",
      "properties": {
        "EndpointIndexId": {
          "description": "Gets or sets the endpoint index ID",
          "type": "string"
        },
        "EndpointIndexDetail": {
          "$ref": "#/definitions/EndpointIndexDetailModel",
          "description": "gets or sets the endpoint index details"
        }
      },
      "example": {
        "EndpointIndexId": "test"
      }
    },
    "EndpointIndexDetailModel": {
      "description": "Endpoint Index Detail Model",
      "type": "object",
      "properties": {
        "Title": {
          "description": "Gets or sets the title.",
          "type": "string"
        },
        "Tag": {
          "description": "Gets or sets the tag.",
          "type": "string"
        },
        "HttpMethod": {
          "description": "Gets or sets the httpMethod.",
          "type": "string"
        },
        "OperationId": {
          "description": "Gets or sets the operation ID.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        }
      },
      "example": {
        "Title": "test",
        "Tag": "test",
        "HttpMethod": "test",
        "OperationId": "test",
        "Description": "test"
      }
    },
    "InternalAppChunk": {
      "type": "object",
      "properties": {
        "TransactionId": {
          "type": "string"
        },
        "ChunkData": {
          "format": "byte",
          "type": "string"
        },
        "ChunkSequenceNumber": {
          "format": "int32",
          "type": "integer"
        },
        "TotalApplicationSize": {
          "format": "int64",
          "type": "integer"
        },
        "ChunkSize": {
          "format": "int64",
          "type": "integer"
        }
      },
      "example": {
        "TransactionId": "test",
        "ChunkSequenceNumber": 1,
        "TotalApplicationSize": 1,
        "ChunkSize": 1
      }
    },
    "AppChunkTranscationResponse": {
      "type": "object",
      "properties": {
        "TranscationId": {
          "type": "string"
        },
        "ChunkSequenceNumber": {
          "format": "int32",
          "type": "integer"
        },
        "UploadSuccess": {
          "type": "boolean"
        }
      },
      "example": {
        "TranscationId": "test",
        "ChunkSequenceNumber": 1,
        "UploadSuccess": true
      }
    },
    "InternalAppChunkTranscation": {
      "type": "object",
      "properties": {
        "TransactionId": {
          "type": "string"
        },
        "BlobId": {
          "type": "string"
        },
        "DeviceType": {
          "type": "string"
        },
        "ApplicationName": {
          "type": "string"
        },
        "SupportedModels": {
          "$ref": "#/definitions/ApplicationSupportedModels"
        },
        "PushMode": {
          "type": "string"
        },
        "Description": {
          "pattern": "^[^|]*$",
          "type": "string"
        },
        "SupportEmail": {
          "type": "string"
        },
        "SupportPhone": {
          "type": "string"
        },
        "Developer": {
          "type": "string"
        },
        "DeveloperEmail": {
          "type": "string"
        },
        "DeveloperPhone": {
          "type": "string"
        },
        "AutoUpdateVersion": {
          "type": "boolean"
        },
        "LocationGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "EnableProvisioning": {
          "type": "boolean"
        },
        "FileName": {
          "type": "string"
        },
        "SupportedProcessorArchitecture": {
          "type": "string"
        },
        "MsiDeploymentParamModel": {
          "$ref": "#/definitions/MsiDeploymentParamModel"
        },
        "IsDependencyFile": {
          "type": "boolean"
        },
        "DeploymentOptions": {
          "$ref": "#/definitions/ApplicationDeploymentOptionsModel"
        },
        "FilesOptions": {
          "$ref": "#/definitions/ApplicationFilesOptionsModel"
        }
      },
      "example": {
        "TransactionId": "test",
        "BlobId": "test",
        "DeviceType": "test",
        "ApplicationName": "test",
        "PushMode": "test",
        "Description": "test",
        "SupportEmail": "test",
        "SupportPhone": "test",
        "Developer": "test",
        "DeveloperEmail": "test",
        "DeveloperPhone": "test",
        "AutoUpdateVersion": true,
        "LocationGroupId": 1,
        "EnableProvisioning": true,
        "FileName": "test",
        "SupportedProcessorArchitecture": "test",
        "IsDependencyFile": true
      }
    },
    "InternalAppModel": {
      "description": "This Model represents an Internal Application.",
      "type": "object",
      "properties": {
        "ApplicationName": {
          "description": "Gets or sets the Application Name.",
          "type": "string"
        },
        "AppId": {
          "description": "Gets or sets Bundle Id of the App.",
          "type": "string"
        },
        "ActualFileVersion": {
          "description": "Gets or sets the Actual File Version of the App.",
          "type": "string"
        },
        "BuildVersion": {
          "description": "Gets or sets the Build Version of the App.",
          "type": "string"
        },
        "AirwatchAppVersion": {
          "description": "Gets or sets the AirWatch internal application version.",
          "type": "string"
        },
        "Status": {
          "description": "Gets or sets the Status of the App",
          "type": "string"
        },
        "ManagedBy": {
          "description": "Gets or sets Managed By Organization Group Id.",
          "type": "string"
        },
        "AssumeManagementOfUserInstalledApp": {
          "description": "Gets or sets a value indicating whether management of user installed apps should be assumed.",
          "type": "string"
        },
        "Platform": {
          "description": "Gets or sets the Platform.",
          "type": "string"
        },
        "SupportedModels": {
          "description": "Gets or sets the ApplicationSupportedModel.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationSupportedModelsModel"
          }
        },
        "MinimumOperatingSystem": {
          "description": "Gets or sets the Minimum Operating System Version of the Application.",
          "type": "string"
        },
        "AppSizeInKB": {
          "format": "int32",
          "description": "Gets or sets the size of the application.",
          "type": "integer"
        },
        "CategoryList": {
          "description": "Gets or sets the application category list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationCategoriesModel"
          }
        },
        "Comments": {
          "description": "Gets or sets the Comments for the Application.",
          "type": "string"
        },
        "ApplicationUrl": {
          "description": "Gets or sets the url for the Application.",
          "type": "string"
        },
        "Sdk": {
          "description": "Gets or sets a value indicating whether the application uses AirWatch Software Development Kit.",
          "type": "string"
        },
        "SdkProfileId": {
          "format": "int32",
          "description": "Gets or sets the Sdk Profile Id of the App if it uses SDK Profile.",
          "type": "integer"
        },
        "DevicesAssignedCount": {
          "format": "int32",
          "description": "Gets or sets the number of device to which current application is Assigned.",
          "type": "integer"
        },
        "DevicesInstalledCount": {
          "format": "int32",
          "description": "Gets or sets the number of device on which current application is Installed.",
          "type": "integer"
        },
        "DevicesNotInstalledCount": {
          "format": "int32",
          "description": "Gets or sets the number of device to which current application is Assigned, but not installed.",
          "type": "integer"
        },
        "Rating": {
          "format": "int32",
          "description": "Gets or sets the User Rating of the App.",
          "type": "integer"
        },
        "ChangeLog": {
          "description": "Gets or sets the Change Log for the Application.",
          "type": "string"
        },
        "RenewalDate": {
          "format": "date-time",
          "description": "Gets or sets the expiration date of the Device Provisioning Profile.",
          "type": "string"
        },
        "Assignments": {
          "description": "Gets or sets the app configs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationAssignmentModel"
          }
        },
        "MsiDeploymentParamModel": {
          "$ref": "#/definitions/MsiDeploymentParameterModel",
          "description": "Msi deployment param model. This is valid only for MSI files when Software Distribution is not enabled."
        },
        "DeploymentOptions": {
          "$ref": "#/definitions/AppDeploymentOptionsModel",
          "description": "Application deployment options for software distribution."
        },
        "FilesOptions": {
          "$ref": "#/definitions/AppFilesOptionsModel",
          "description": "Application files options."
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "ApplicationSupportedModelsModel": {
      "description": "The application supported models model.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the model name.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Name": "test",
        "id": 1
      }
    },
    "ApplicationCategoriesModel": {
      "description": "The application categories model.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the category name.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Name": "test",
        "id": 1
      }
    },
    "ApplicationAssignmentModel": {
      "description": "The application assignment model.",
      "type": "object",
      "properties": {
        "SmartGroupId": {
          "format": "int32",
          "description": "Gets or sets the smart group id.",
          "type": "integer"
        },
        "SmartGroupName": {
          "description": "Gets or sets the smart group name.",
          "type": "string"
        },
        "PushMode": {
          "description": "Gets or sets the Push Mode for the Application.",
          "type": "string"
        },
        "EffectiveDate": {
          "format": "date-time",
          "description": "Gets or sets the EffectiveDate Date for  the Application.",
          "type": "string"
        },
        "RemoveOnUnEnroll": {
          "description": "Gets or sets a value indicating whether the appslication should be removed on unenrollment.",
          "type": "string"
        },
        "ApplicationBackup": {
          "description": "Gets or sets a value indicating whether application backup is enabled.",
          "type": "string"
        },
        "AutoUpdateDevicesWithPreviousVersion": {
          "description": "Gets or sets a value indicating whether the newest version of the app should be pushed to devices that have already downloaded the app.",
          "type": "string"
        },
        "PerAppVpn": {
          "description": "Gets or sets a value indicating whether Per App VPN flag for iOS devices is enabled.",
          "type": "string"
        },
        "VpnProfileId": {
          "format": "int32",
          "description": "Gets or sets the VPN Profile ID associated with the application.",
          "type": "integer"
        },
        "Rank": {
          "format": "int32",
          "description": "Gets or sets the Application Rank.",
          "type": "integer"
        },
        "AppConfig": {
          "description": "Gets or sets a value indicating whether custom application configuration keys and values should be sent to the device.",
          "type": "string"
        },
        "AppConfigs": {
          "description": "Gets or sets the app configs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationConfigurationModel"
          }
        },
        "ApplicationTransformIds": {
          "description": "Application Transforms Ids attached to the application",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "MsiDeploymentParameterModel": {
      "description": "Msi deployment param model.",
      "type": "object",
      "properties": {
        "CommandLineArguments": {
          "description": "Command-line options to be used when calling MSIEXEC.exe.",
          "type": "string"
        },
        "InstallTimeoutInMinutes": {
          "format": "int32",
          "description": "Amount of time, in minutes that the installation process can run before the installer \r\nconsiders the installation may have failed and no longer monitors the installation operation.Range 0-60",
          "type": "integer"
        },
        "RetryCount": {
          "format": "int32",
          "description": "The number of times the download and installation operation will be retried before the installation will be marked as failed. With a limit of â€˜10' attempts.",
          "type": "integer"
        },
        "RetryIntervalInMinutes": {
          "format": "int32",
          "description": "Amount of time, in minutes between retry operations. Range 0-10",
          "type": "integer"
        }
      },
      "example": {
        "CommandLineArguments": "test",
        "InstallTimeoutInMinutes": 1,
        "RetryCount": 1,
        "RetryIntervalInMinutes": 1
      }
    },
    "AppDeploymentOptionsModel": {
      "description": "A model class for deployment options.",
      "type": "object",
      "properties": {
        "WhenToInstall": {
          "$ref": "#/definitions/WhenToInstallApiModel",
          "description": "When to install options."
        },
        "HowToInstall": {
          "$ref": "#/definitions/HowToInstallApiModel",
          "description": "How to install options."
        },
        "WhenToCallInstallComplete": {
          "$ref": "#/definitions/WhenToCallInstallCompleteApiModel",
          "description": "When to call install complete options."
        }
      },
      "example": {}
    },
    "AppFilesOptionsModel": {
      "description": "A model class for files options.",
      "type": "object",
      "properties": {
        "AppDependenciesList": {
          "description": "List of application dependency Ids",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppDependencyModel"
          }
        },
        "AppTransformsList": {
          "description": "List of uploaded transform files",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppTransformModel"
          }
        },
        "AppPatchesList": {
          "description": "List of uploaded patch files",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppPatchModel"
          }
        },
        "ApplicationUnInstallProcess": {
          "$ref": "#/definitions/AppUnInstallProcessModel",
          "description": "Application uninstallation process"
        }
      },
      "example": {
        "AppDependenciesList": [
          {
            "Name": "test",
            "ApplicationDependencyId": 1
          }
        ],
        "AppTransformsList": [
          {
            "TransformId": 1,
            "TransformFileName": "test",
            "TransformBlobId": 1
          }
        ],
        "AppPatchesList": [
          {
            "PatchId": 1,
            "PatchFileName": "test",
            "PatchBlobId": 1,
            "PatchType": "test"
          }
        ]
      }
    },
    "ApplicationConfigurationModel": {
      "description": "The application configuration model.",
      "type": "object",
      "properties": {
        "Key": {
          "description": "Gets or sets the configuration key.",
          "type": "string"
        },
        "Value": {
          "description": "Gets or sets the configuration value.",
          "type": "string"
        },
        "Type": {
          "description": "Gets or sets the configuration value type.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Key": "test",
        "Value": "test",
        "Type": "test",
        "id": 1
      }
    },
    "WhenToInstallApiModel": {
      "description": "A model class for when to install options.",
      "type": "object",
      "properties": {
        "DataContingencies": {
          "description": "Data Contingencies.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentByCriteriaApiModel"
          }
        },
        "DiskSpaceRequiredInKb": {
          "format": "int32",
          "description": "The disk space required for installation of the package in KB.",
          "type": "integer"
        },
        "DevicePowerRequired": {
          "format": "int32",
          "description": "The device power required for installation of the package. Valid range 0 - 100.",
          "type": "integer"
        },
        "RamRequiredInMb": {
          "format": "int32",
          "description": "The RAM required for the installation of the page in MB.",
          "type": "integer"
        }
      },
      "example": {
        "DataContingencies": [
          {
            "CriteriaType": "test",
            "LogicalCondition": "test"
          }
        ],
        "DiskSpaceRequiredInKb": 1,
        "DevicePowerRequired": 1,
        "RamRequiredInMb": 1
      }
    },
    "HowToInstallApiModel": {
      "description": "A model class for how to install options.",
      "type": "object",
      "properties": {
        "InstallContext": {
          "description": "Install context (Supported values:  Device, User) where the package has to be installed.",
          "type": "string"
        },
        "InstallCommand": {
          "description": "Gets or sets the install command to install a package using the command line ex: \"/quiet\".",
          "type": "string"
        },
        "AdminPrivileges": {
          "description": "Value indicating whether admin privileges are needed for the installation of a package.",
          "type": "boolean"
        },
        "DeviceRestart": {
          "description": "The device restart option. Supported values: DoNotRestart, ForceRestart, RestartIfNeeded",
          "type": "string"
        },
        "RetryCount": {
          "format": "int32",
          "description": "The number of times package installation operation will be retried.  Valid range 0 - 10",
          "type": "integer"
        },
        "RetryIntervalInMinutes": {
          "format": "int32",
          "description": "The amount of time in minutes between retry operations.  Valid range 0 - 10",
          "type": "integer"
        },
        "InstallTimeoutInMinutes": {
          "format": "int32",
          "description": "The amount of time in minutes that the installation process can run before the installer considers the installation may have failed.  Valid range 0 - 60",
          "type": "integer"
        },
        "InstallerRebootExitCode": {
          "description": "The success exit code.",
          "type": "string"
        },
        "InstallerSuccessExitCode": {
          "description": "The success exit code.",
          "type": "string"
        }
      },
      "example": {
        "InstallContext": "test",
        "InstallCommand": "test",
        "AdminPrivileges": true,
        "DeviceRestart": "test",
        "RetryCount": 1,
        "RetryIntervalInMinutes": 1,
        "InstallTimeoutInMinutes": 1,
        "InstallerRebootExitCode": "test",
        "InstallerSuccessExitCode": "test"
      }
    },
    "WhenToCallInstallCompleteApiModel": {
      "description": "A model class for how to install options.",
      "type": "object",
      "properties": {
        "UseAdditionalCriteria": {
          "description": "Value indicating whether additional criteria has to be used or not.",
          "type": "boolean"
        },
        "IdentifyApplicationBy": {
          "description": "The way by which an application can be identified (Supported Values: DefiningCriteria, UsingCustomScript).",
          "type": "string"
        },
        "CriteriaList": {
          "description": "The criteria configured to identify application.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentByCriteriaApiModel"
          }
        },
        "CustomScript": {
          "$ref": "#/definitions/DeploymentByCustomScriptApiModel",
          "description": "The custom script configured to identify application."
        }
      },
      "example": {
        "UseAdditionalCriteria": true,
        "IdentifyApplicationBy": "test",
        "CriteriaList": [
          {
            "CriteriaType": "test",
            "LogicalCondition": "test"
          }
        ]
      }
    },
    "AppDependencyModel": {
      "description": "Application dependency model",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name of the application.",
          "type": "string"
        },
        "ApplicationDependencyId": {
          "format": "int32",
          "description": "Application dependency Id.",
          "type": "integer"
        }
      },
      "example": {
        "Name": "test",
        "ApplicationDependencyId": 1
      }
    },
    "AppTransformModel": {
      "description": "Transform for a MSI file uploaded",
      "type": "object",
      "properties": {
        "TransformId": {
          "format": "int32",
          "description": "Name of the uploaded Transform File",
          "type": "integer"
        },
        "TransformFileName": {
          "description": "Name of the uploaded Transform File",
          "type": "string"
        },
        "TransformBlobId": {
          "format": "int32",
          "description": "BlobId of the uploaded Tranform",
          "type": "integer"
        }
      },
      "example": {
        "TransformId": 1,
        "TransformFileName": "test",
        "TransformBlobId": 1
      }
    },
    "AppPatchModel": {
      "description": "Patch for a MSI file uploaded",
      "type": "object",
      "properties": {
        "PatchId": {
          "format": "int32",
          "description": "Id of the uploaded Patch",
          "type": "integer"
        },
        "PatchFileName": {
          "description": "Name of the uploaded Patch File",
          "type": "string"
        },
        "PatchBlobId": {
          "format": "int32",
          "description": "BlobId of the uploaded Patch",
          "type": "integer"
        },
        "PatchType": {
          "description": "Type of the uploaded patch. Supported values : Additive, Cumulative",
          "type": "string"
        }
      },
      "example": {
        "PatchId": 1,
        "PatchFileName": "test",
        "PatchBlobId": 1,
        "PatchType": "test"
      }
    },
    "AppUnInstallProcessModel": {
      "description": "Model class for the application uninstall process section applicable for .exe/.msi application(s).",
      "type": "object",
      "properties": {
        "UseCustomScript": {
          "description": "Value indicating whether custom script is used or not.",
          "type": "boolean"
        },
        "CustomScript": {
          "$ref": "#/definitions/CustomScriptApiModel",
          "description": "The custom script."
        }
      },
      "example": {
        "UseCustomScript": true
      }
    },
    "DeploymentByCriteriaApiModel": {
      "description": "A model class for the application deployment.",
      "type": "object",
      "properties": {
        "CriteriaType": {
          "description": "Criteria type. Supported values: AppExists, AppDoesNotExist, FileExists, FileDoesNotExist, RegistryExists, RegistryDoesNotExist",
          "type": "string"
        },
        "AppCriteria": {
          "$ref": "#/definitions/AppCriteriaApiModel",
          "description": "Application criteria."
        },
        "FileCriteria": {
          "$ref": "#/definitions/FileCriteriaApiModel",
          "description": "File criteria."
        },
        "RegistryCriteria": {
          "$ref": "#/definitions/RegistryCriteriaApiModel",
          "description": "Registry criteria."
        },
        "LogicalCondition": {
          "description": "Logical condition. Supported values : End, And, Or.",
          "type": "string"
        }
      },
      "example": {
        "CriteriaType": "test",
        "LogicalCondition": "test"
      }
    },
    "DeploymentByCustomScriptApiModel": {
      "description": "Model class for using custom script section applicable for .exe/.msi application(s).",
      "type": "object",
      "properties": {
        "ScriptType": {
          "description": "Script Type (JScript, PowerShell, VBScript).",
          "type": "string"
        },
        "CommandToRunTheScript": {
          "description": "Command to run the script.",
          "type": "string"
        },
        "CustomScriptFileBlodId": {
          "format": "int32",
          "description": "The BlobId of the script file associated.\r\nSupported file types : js, jse, ps1, ps1xml, psc1, psd1, psm1, pssc, cdxml, vbs, vbe, wsf, wsc",
          "type": "integer"
        },
        "SuccessExitCode": {
          "format": "int32",
          "description": "The success exit code.",
          "type": "integer"
        }
      },
      "example": {
        "ScriptType": "test",
        "CommandToRunTheScript": "test",
        "CustomScriptFileBlodId": 1,
        "SuccessExitCode": 1
      }
    },
    "CustomScriptApiModel": {
      "description": "Model class for the application uninstall process section applicable for .exe/.msi application(s).",
      "type": "object",
      "properties": {
        "CustomScriptType": {
          "description": "The custom script type (Supported values: Input, Upload).",
          "type": "string"
        },
        "UninstallCommand": {
          "description": "The application uninstall command provided.",
          "type": "string"
        },
        "UninstallScriptBlobId": {
          "format": "int32",
          "description": "Gets or sets the ID value of the uninstall script file uploaded on the console.\r\nSupported file types : js,jse,ps1,ps1xml,psc1,psd1,psm1,pssc,cdxml,vbs,vbe,wsf,wsc",
          "type": "integer"
        }
      },
      "example": {
        "CustomScriptType": "test",
        "UninstallCommand": "test",
        "UninstallScriptBlobId": 1
      }
    },
    "AppCriteriaApiModel": {
      "description": "A model class for the application criteria modal dialog.",
      "type": "object",
      "properties": {
        "ApplicationIdentifier": {
          "description": "The identifier of the application.",
          "type": "string"
        },
        "VersionCondition": {
          "description": "Version condition. Supported values: Any, EqualTo, GreaterThan, LessThan.",
          "type": "string"
        },
        "MajorVersion": {
          "format": "int32",
          "description": "Gets or sets the major version of the application.",
          "type": "integer"
        },
        "MinorVersion": {
          "format": "int32",
          "description": "Gets or sets the minor version of the application.",
          "type": "integer"
        },
        "RevisionNumber": {
          "format": "int32",
          "description": "Gets or sets the fix version of the application.",
          "type": "integer"
        },
        "BuildNumber": {
          "format": "int32",
          "description": "Gets or sets the build version of the application.",
          "type": "integer"
        }
      }
    },
    "FileCriteriaApiModel": {
      "description": "A model class for the file criteria.",
      "type": "object",
      "properties": {
        "Path": {
          "description": "The path of the application.",
          "type": "string"
        },
        "VersionCondition": {
          "description": "Version condition. Supported values: Any, EqualTo, GreaterThan, LessThan.",
          "type": "string"
        },
        "MajorVersion": {
          "format": "int32",
          "description": "The major version of the application.",
          "type": "integer"
        },
        "MinorVersion": {
          "format": "int32",
          "description": "The minor version of the application.",
          "type": "integer"
        },
        "RevisionNumber": {
          "format": "int32",
          "description": "The fix version of the application.",
          "type": "integer"
        },
        "BuildNumber": {
          "format": "int32",
          "description": "The build version of the application.",
          "type": "integer"
        },
        "ModifiedOn": {
          "description": "The date on which the application was last modified.",
          "type": "string"
        }
      }
    },
    "RegistryCriteriaApiModel": {
      "description": "A model class for the registry criteria.",
      "type": "object",
      "properties": {
        "Path": {
          "description": "The path of the key in the registry.",
          "type": "string"
        },
        "KeyName": {
          "description": "The name of new key to be created in the registry.",
          "type": "string"
        },
        "KeyType": {
          "description": "The type of key to be created in the registry. Supported values : String, Binary, DWord, QWord, MultiString, ExpandableString",
          "type": "string"
        },
        "KeyValue": {
          "description": "The value of the key to be created in the registry.",
          "type": "string"
        }
      },
      "example": {
        "Path": "test",
        "KeyName": "test",
        "KeyType": "test",
        "KeyValue": "test"
      }
    },
    "DeviceInfo": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "Udid": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "MacAddress": {
          "type": "string"
        }
      },
      "example": {
        "DeviceId": 1,
        "Udid": "test",
        "SerialNumber": "test",
        "MacAddress": "test"
      }
    },
    "WindowsAppDependencyModel": {
      "description": "Windows App Dependency",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Application Name",
          "type": "string"
        },
        "LocationGroupId": {
          "format": "int32",
          "description": "Location Group Id",
          "type": "integer"
        },
        "IsSystemApp": {
          "description": "Bool to check if the app is system app",
          "type": "boolean"
        },
        "BlobId": {
          "format": "int32",
          "description": "Application Blob Id",
          "type": "integer"
        },
        "Version": {
          "description": "App Verison",
          "type": "string"
        },
        "ProcessorArchitecture": {
          "description": "Processor Architecture",
          "type": "string"
        },
        "PackageFamilyName": {
          "description": "Package Family Name",
          "type": "string"
        },
        "PackageId": {
          "description": "Package Id",
          "type": "string"
        },
        "DeploymentOptions": {
          "$ref": "#/definitions/AppDeploymentOptionsModel",
          "description": "Application deployment options for software distribution."
        },
        "FilesOptions": {
          "$ref": "#/definitions/AppFilesOptionsModel",
          "description": "Application files options."
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "Name": "test",
        "LocationGroupId": 1,
        "IsSystemApp": true,
        "BlobId": 1,
        "Version": "test",
        "ProcessorArchitecture": "test",
        "PackageFamilyName": "test",
        "PackageId": "test",
        "id": 1
      }
    },
    "ApplicationAssignmentsModel": {
      "description": "The application assignments model.",
      "type": "object",
      "properties": {
        "SmartGroupIds": {
          "description": "Gets or sets an array of smart group ids to be associated with the app.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "SmartGroupIdsForDeletion": {
          "description": "Gets or sets an array of smart group ids to be deleted.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "DeploymentParameters": {
          "$ref": "#/definitions/ApplicationDeploymentParametersModel",
          "description": "Gets or sets the application deployment parameters."
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "ApplicationDeploymentParametersModel": {
      "description": "The application deployment parameters model.",
      "type": "object",
      "properties": {
        "PushMode": {
          "description": "Gets or sets the push mode for the application.",
          "type": "string"
        },
        "EffectiveDate": {
          "format": "date-time",
          "description": "Gets or sets the effective date for  the application.",
          "type": "string"
        },
        "RemoveOnUnEnroll": {
          "description": "Gets or sets a value indicating whether the application should be removed on unenrollment.",
          "type": "boolean"
        },
        "ApplicationBackup": {
          "description": "Gets or sets a value indicating whether application backup is enabled.",
          "type": "boolean"
        },
        "AutoUpdateDevicesWithPreviousVersion": {
          "description": "Gets or sets a value indicating whether the newest version of the app should be pushed to devices that have already downloaded the app.",
          "type": "boolean"
        },
        "AdaptiveManagement": {
          "description": "Specifies whether device should enrolled to get the app\r\nOnly applicable for WorkspaceOne",
          "type": "boolean"
        },
        "ApplicationTransformIds": {
          "description": "Application Transforms Ids attached to the application",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "ApplicationDeleteAssignmentModel": {
      "description": "The application delete assignment model.",
      "type": "object",
      "properties": {
        "SmartGroupIds": {
          "description": "Gets or sets the smart group ids.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "SmartGroupIds": [
          1
        ],
        "id": 1
      }
    },
    "DeviceList": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Page": 1,
        "PageSize": 1,
        "Total": 1
      }
    },
    "SendApplicationConfigurationModel": {
      "description": "Model to show collaborator in a response",
      "type": "object",
      "properties": {
        "ApplicationId": {
          "format": "int32",
          "description": "Gets or sets the ApplicationId",
          "type": "integer"
        },
        "DeviceType": {
          "format": "int32",
          "description": "Gets or sets DeviceType",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "ApplicationId": 1,
        "DeviceType": 1,
        "id": 1
      }
    },
    "GetLicensesForBspAppListResultModel": {
      "description": "GetLicensesForBspAppListResultModel",
      "type": "object",
      "properties": {
        "LicensesForBspAppList": {
          "description": "Gets or sets List of licenses for Bsp apps",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetLicensesForBspAppResponse"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "LicensesForBspAppList": [
          {
            "ProductId": "test",
            "SkuId": "test",
            "AssignedTo": "test",
            "AssignedDate": "test",
            "State": "test",
            "DeviceCount": 1,
            "id": 1
          }
        ],
        "id": 1
      }
    },
    "GetLicensesForBspAppResponse": {
      "description": "Get licenses For Bsp App Response",
      "type": "object",
      "properties": {
        "ProductId": {
          "description": "Gets or sets Product ID of the app to which this license belongs",
          "type": "string"
        },
        "SkuId": {
          "description": "Gets or sets Sku ID of the app to which this license belongs",
          "type": "string"
        },
        "AssignedTo": {
          "description": "Gets or sets ID of the user to which this license is assigned",
          "type": "string"
        },
        "AssignedDate": {
          "description": "Gets or sets Date at which this license was assigned",
          "type": "string"
        },
        "State": {
          "description": "Gets or sets License state",
          "type": "string"
        },
        "DeviceCount": {
          "format": "int32",
          "description": "Gets or sets Device Count",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "ProductId": "test",
        "SkuId": "test",
        "AssignedTo": "test",
        "AssignedDate": "test",
        "State": "test",
        "DeviceCount": 1,
        "id": 1
      }
    },
    "StatusModel": {
      "description": "The vpp sync status model.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Gets or sets the satus for the last Sync Asset job, InProgress/Complete/CompletedWthErrors",
          "type": "string"
        },
        "statusCode": {
          "format": "int32",
          "description": "Gets or sets Status code for the last sync request,  1(In Progress)/2(Complete)/3(CompletedWthErrors)",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "status": "test",
        "statusCode": 1,
        "id": 1
      }
    },
    "SmartGroupAppsModel": {
      "description": "The smart group apps.",
      "type": "object",
      "properties": {
        "SmartGroups": {
          "description": "Gets or sets the smart groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupsModel"
          }
        }
      }
    },
    "SmartGroupsModel": {
      "description": "The smart groups model.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the smart group id.",
          "type": "integer"
        }
      },
      "example": {
        "Id": 1
      }
    },
    "PurchasedApplicationSearchResult": {
      "type": "object",
      "properties": {
        "Application": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurchasedApplicationEntity"
          }
        },
        "Page": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PurchasedApplicationEntity": {
      "type": "object",
      "properties": {
        "ApplicationName": {
          "type": "string"
        },
        "ApplicationSize": {
          "type": "string"
        },
        "ApplicationUrl": {
          "type": "string"
        },
        "Assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurchasedAppAssignment"
          }
        },
        "BundleId": {
          "type": "string"
        },
        "ExternalId": {
          "type": "string"
        },
        "IsReimbursable": {
          "type": "boolean"
        },
        "LargeIconUri": {
          "type": "string"
        },
        "MediumIconUri": {
          "type": "string"
        },
        "SmallIconUri": {
          "type": "string"
        },
        "LocationGroupId": {
          "format": "int64",
          "type": "integer"
        },
        "Platform": {
          "format": "int32",
          "type": "integer"
        },
        "RedeemableCodes": {
          "$ref": "#/definitions/PurchasedAppRedeemableCodesDetails"
        },
        "ManagedDistribution": {
          "$ref": "#/definitions/PurchasedAppManagedDistributionDetials"
        },
        "Deployment": {
          "$ref": "#/definitions/PurchasedAppDeploymentDetails"
        },
        "AppVersion": {
          "type": "string"
        },
        "ActualFileVersion": {
          "type": "string"
        },
        "AppType": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "SupportedModels": {
          "$ref": "#/definitions/ApplicationSupportedModels"
        },
        "AssignmentStatus": {
          "type": "string"
        },
        "Comments": {
          "type": "string"
        },
        "IsAutoUpdateEnabled": {
          "type": "boolean"
        },
        "Id": {
          "$ref": "#/definitions/EntityId"
        }
      }
    },
    "PurchasedAppAssignment": {
      "type": "object",
      "properties": {
        "Status": {
          "type": "string"
        },
        "SmartGroupId": {
          "format": "int32",
          "type": "integer"
        },
        "LocationGroupId": {
          "type": "string"
        },
        "Users": {
          "format": "int32",
          "type": "integer"
        },
        "Allocated": {
          "format": "int32",
          "type": "integer"
        },
        "Redeemed": {
          "format": "int32",
          "type": "integer"
        },
        "AssignmentRuleType": {
          "type": "string"
        }
      }
    },
    "PurchasedAppRedeemableCodesDetails": {
      "type": "object",
      "properties": {
        "Purchased": {
          "format": "int32",
          "type": "integer"
        },
        "Burned": {
          "format": "int32",
          "type": "integer"
        },
        "OnHold": {
          "format": "int32",
          "type": "integer"
        },
        "Available": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Purchased": 1,
        "Burned": 1,
        "OnHold": 1,
        "Available": 1
      }
    },
    "PurchasedAppManagedDistributionDetials": {
      "type": "object",
      "properties": {
        "Purchased": {
          "format": "int32",
          "type": "integer"
        },
        "Burned": {
          "format": "int32",
          "type": "integer"
        },
        "OnHold": {
          "format": "int32",
          "type": "integer"
        },
        "Available": {
          "format": "int32",
          "type": "integer"
        },
        "AppLicenseEligibility": {
          "type": "string"
        }
      },
      "example": {
        "Purchased": 1,
        "Burned": 1,
        "OnHold": 1,
        "Available": 1,
        "AppLicenseEligibility": "test"
      }
    },
    "PurchasedAppDeploymentDetails": {
      "type": "object",
      "properties": {
        "AssignmentType": {
          "type": "string"
        },
        "RemoveOnUnenroll": {
          "type": "boolean"
        },
        "PreventApplicationBackup": {
          "type": "boolean"
        },
        "UseVPN": {
          "type": "boolean"
        }
      }
    },
    "PurchasedApplicationModel": {
      "description": "The purchased application model",
      "type": "object",
      "properties": {
        "ManagedBy": {
          "format": "int32",
          "description": "ManagedBy OG Name.",
          "type": "integer"
        },
        "Orders": {
          "$ref": "#/definitions/PurchasedAppOrdersModel",
          "description": "Order Details [Applicable for PurchasedOnly Apps]"
        },
        "Licenses": {
          "$ref": "#/definitions/PurchasedAppOrdersModel",
          "description": "Licenses Details [Applicable for LicensedOnly Apps]"
        },
        "Assignments": {
          "description": "Assignment Details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurchasedAppAssignmentModel"
          }
        },
        "Deployment": {
          "$ref": "#/definitions/PurchasedAppDeploymentModel",
          "description": "Deployment Details"
        },
        "SendApplicationConfiguration": {
          "description": "Send application configuration",
          "type": "boolean"
        },
        "AppConfigList": {
          "description": "App configuration details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationConfigurationModel"
          }
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "PurchasedAppOrdersModel": {
      "description": "The purchased app orders model",
      "type": "object",
      "properties": {
        "TotalLicenses": {
          "format": "int32",
          "description": "Total number of Licenses",
          "type": "integer"
        },
        "OnHold": {
          "format": "int32",
          "description": "Number of licenses which are on hold.",
          "type": "integer"
        },
        "Allocated": {
          "format": "int32",
          "description": "Number of Allocated Licenses.",
          "type": "integer"
        },
        "Unallocated": {
          "format": "int32",
          "description": "Number of unallocated Licenses.",
          "type": "integer"
        },
        "Redeemed": {
          "format": "int32",
          "description": "Number of Redeemed Licenses.",
          "type": "integer"
        },
        "ExternallyRedeemed": {
          "format": "int32",
          "description": "Number of ExternallyRedeemed Licenses.",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      },
      "example": {
        "TotalLicenses": 1,
        "OnHold": 1,
        "Allocated": 1,
        "Unallocated": 1,
        "Redeemed": 1,
        "ExternallyRedeemed": 1,
        "id": 1
      }
    },
    "PurchasedAppAssignmentModel": {
      "description": "The purchased app assignment model",
      "type": "object",
      "properties": {
        "Status": {
          "description": "Purchased Application Assignment Status [Active/Inactive].",
          "type": "string"
        },
        "SmartGroupId": {
          "format": "int32",
          "description": "SmartGroupId to which current Purchased Application is assigned [License Based].",
          "type": "integer"
        },
        "LocationGroupId": {
          "description": "LocationGroupId to which current Purchased Application is assigned[Redemption Based].",
          "type": "string"
        },
        "Users": {
          "format": "int32",
          "description": "Number of Users to which current Purchased Application is assigned.",
          "type": "integer"
        },
        "Allocated": {
          "format": "int32",
          "description": "Allocated Licenses",
          "type": "integer"
        },
        "Redeemed": {
          "format": "int32",
          "description": "Redeemed Licenses",
          "type": "integer"
        },
        "AssignmentRuleType": {
          "description": "AssignmentRule Type [LicenseBased and RedemptionBased].",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "PurchasedAppDeploymentModel": {
      "description": "The purchased app deployment model",
      "type": "object",
      "properties": {
        "AssignmentType": {
          "description": "AssignmentType",
          "type": "string"
        },
        "RemoveOnUnenroll": {
          "description": "RemoveOnUnenroll",
          "type": "boolean"
        },
        "PreventApplicationBackup": {
          "description": "PreventApplicationBackup",
          "type": "boolean"
        },
        "UseVPN": {
          "description": "UseVPN",
          "type": "boolean"
        },
        "id": {
          "format": "int32",
          "description": "Identifier",
          "type": "integer"
        }
      }
    },
    "PurchasedApplication": {
      "type": "object",
      "properties": {
        "ManagedBy": {
          "format": "int32",
          "type": "integer"
        },
        "Orders": {
          "$ref": "#/definitions/PurchasedAppOrders"
        },
        "Licenses": {
          "$ref": "#/definitions/PurchasedAppOrders"
        },
        "Assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurchasedAppAssignment"
          }
        },
        "Deployment": {
          "$ref": "#/definitions/PurchasedAppDeploymentDetails"
        }
      }
    },
    "PurchasedAppOrders": {
      "type": "object",
      "properties": {
        "TotalLicenses": {
          "format": "int32",
          "type": "integer"
        },
        "OnHold": {
          "format": "int32",
          "type": "integer"
        },
        "Allocated": {
          "format": "int32",
          "type": "integer"
        },
        "Unallocated": {
          "format": "int32",
          "type": "integer"
        },
        "Redeemed": {
          "format": "int32",
          "type": "integer"
        },
        "ExternallyRedeemed": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "TotalLicenses": 1,
        "OnHold": 1,
        "Allocated": 1,
        "Unallocated": 1,
        "Redeemed": 1,
        "ExternallyRedeemed": 1
      }
    },
    "UserVppInviteStatus": {
      "type": "object",
      "properties": {
        "ApplicationId": {
          "format": "int32",
          "type": "integer"
        },
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "Status": {
          "type": "string"
        }
      },
      "example": {
        "ApplicationId": 1,
        "DeviceId": 1,
        "Status": "test"
      }
    },
    "PurchasedAppAutoUpdateModel": {
      "description": "The app auto update model.",
      "type": "object",
      "properties": {
        "IsAutoUpdateEnabled": {
          "description": "Gets or sets a value indicating whether is auto update enabled.",
          "type": "boolean"
        }
      },
      "example": {
        "IsAutoUpdateEnabled": true
      }
    },
    "SystemCodeCategoryOverrideEntity": {
      "type": "object",
      "properties": {
        "<Category>k__BackingField": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            5,
            6,
            7,
            8,
            9,
            10,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            20,
            21,
            22,
            23,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            29,
            30,
            31,
            32,
            33,
            35,
            36,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            84,
            85,
            86,
            88,
            89,
            91,
            96,
            97,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            142,
            143,
            144,
            145,
            146,
            146,
            147,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            157,
            158,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            170,
            171,
            172,
            173,
            174,
            176,
            177,
            178,
            179,
            183,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193,
            194,
            195,
            196,
            197,
            198,
            201,
            202,
            203,
            205,
            206,
            208,
            209,
            210,
            211,
            212,
            214,
            215,
            216,
            217,
            218,
            219,
            220,
            221,
            222,
            223,
            224,
            225,
            226,
            227,
            228,
            229,
            300,
            301,
            302,
            304,
            305,
            306,
            307,
            308,
            309,
            310,
            320,
            321,
            322,
            323,
            324,
            326,
            327,
            328,
            329,
            330,
            331,
            332,
            335,
            336,
            337,
            338,
            339,
            340,
            341,
            342,
            343,
            344,
            345,
            346,
            347,
            349,
            350,
            351,
            352,
            353,
            354,
            355,
            356,
            357,
            358,
            359,
            360,
            361,
            362,
            363,
            364,
            366,
            367,
            368,
            369,
            370,
            371,
            372,
            373,
            374,
            375,
            376,
            377,
            378,
            379,
            380,
            381,
            400,
            401,
            402,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            1000,
            1001,
            1002,
            1003,
            1005,
            1006
          ],
          "type": "integer"
        },
        "<OrganizationGroupId>k__BackingField": {
          "format": "int32",
          "type": "integer"
        },
        "<Settings>k__BackingField": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SystemCodeOverrideEntity"
          }
        }
      }
    },
    "SystemCodeOverrideEntity": {
      "type": "object",
      "properties": {
        "<CategoryId>k__BackingField": {
          "type": "string"
        },
        "<CodeName>k__BackingField": {
          "type": "string"
        },
        "<LocationGroupId>k__BackingField": {
          "type": "string"
        },
        "<OverrideValue>k__BackingField": {
          "type": "string"
        }
      },
      "example": {
        "CategoryId": "test",
        "CodeName": "test",
        "LocationGroupId": "test",
        "OverrideValue": "test"
      }
    },
    "SmartGroupPublicAppsAssignmentModel": {
      "description": "The smart group public apps assignment model.",
      "required": [
        "PublicApps",
        "SmartGroups"
      ],
      "type": "object",
      "properties": {
        "PublicApps": {
          "description": "Gets or sets the profiles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicAppsModel"
          }
        },
        "SmartGroups": {
          "description": "Gets or sets the smart groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartGroupsModel"
          }
        }
      },
      "example": {
        "PublicApps": [
          {
            "Id": 1
          }
        ],
        "SmartGroups": [
          {
            "Id": 1
          }
        ]
      }
    },
    "PublicAppsModel": {
      "description": "The public apps model.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the profile id.",
          "type": "integer"
        }
      },
      "example": {
        "Id": 1
      }
    },
    "ThirdPartyApps": {
      "type": "object",
      "properties": {
        "AppsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThirdPartyApplicationDetails"
          }
        }
      },
      "example": {
        "AppsList": [
          {
            "ApplicationId": "test",
            "DeviceType": "test",
            "Version": "test",
            "VersionCode": "test",
            "BuildVersion": "test",
            "BlackListPolicies": [
              "test"
            ],
            "WhiteListPolicies": [
              "test"
            ],
            "Scanned": true
          }
        ]
      }
    },
    "ThirdPartyApplicationDetails": {
      "type": "object",
      "properties": {
        "ApplicationId": {
          "type": "string"
        },
        "DeviceType": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "VersionCode": {
          "type": "string"
        },
        "BuildVersion": {
          "type": "string"
        },
        "BlackListPolicies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "WhiteListPolicies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Scanned": {
          "type": "boolean"
        }
      },
      "example": {
        "ApplicationId": "test",
        "DeviceType": "test",
        "Version": "test",
        "VersionCode": "test",
        "BuildVersion": "test",
        "BlackListPolicies": [
          "test"
        ],
        "WhiteListPolicies": [
          "test"
        ],
        "Scanned": true
      }
    },
    "ThirdPartyPolicy": {
      "type": "object",
      "properties": {
        "PolicyId": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      },
      "example": {
        "PolicyId": "test",
        "Name": "test",
        "Description": "test"
      }
    },
    "AppScanTPICertificates": {
      "type": "object",
      "properties": {
        "IntegrationServiceTlsClientCert": {
          "type": "string"
        },
        "VendorTlsClientCert": {
          "type": "string"
        },
        "ConsoleTlsClientCert": {
          "type": "string"
        }
      },
      "example": {
        "IntegrationServiceTlsClientCert": "test",
        "VendorTlsClientCert": "test",
        "ConsoleTlsClientCert": "test"
      }
    }
  }
}
